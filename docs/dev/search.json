[{"path":"https://scunnac.github.io/tantale/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 tantale authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"finding-tales-loci-on-dna-sequences","dir":"Articles","previous_headings":"","what":"Finding TALEs loci on DNA sequences","title":"1. Mining TALE sequences in genomes with tantale","text":"run telltale() without correction “gold” genomes, MAI1, BAI3 PXO86. “error-prone” genome BAI3-1-1 telltale() run correction mode .telltale() adds NTERM CTERM RVD sequences markers termini, important DisTal mach repeat codes cognate RVDs.","code":""},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"run-telltale-no-correction","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences","what":"Run telltale no correction","title":"1. Mining TALE sequences in genomes with tantale","text":"","code":"mclapply(c(mai1_fa, bai3_fa, pxo86), function(fastaFile) {   outdirname <- gsub(\".fa\", \"_nocorrection\", basename(fastaFile))   outputDir <- file.path(telltale_outdir, outdirname)   tellTale(subjectFile = fastaFile,             outputDir = outputDir,             appendExtremityCodes = TRUE,             rvdSep = \"-\",             talArrayCorrection = FALSE) }, mc.cores = 3) #>> [[1]] #>> [1] \"/home/cunnac/TEMP/test_tantale/telltale/MAI1_nocorrection\" #>>  #>> [[2]] #>> [1] \"/home/cunnac/TEMP/test_tantale/telltale/BAI3_nocorrection\" #>>  #>> [[3]] #>> [1] \"/home/cunnac/TEMP/test_tantale/telltale/PXO86_nocorrection\""},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"run-telltale-correction","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences","what":"Run telltale correction","title":"1. Mining TALE sequences in genomes with tantale","text":"","code":"tellTale(subjectFile = bai311_fa,          outputDir = file.path(telltale_outdir, gsub(\".fa\", \"_correction\", basename(bai311_fa))),          TALE_CtermDNAHitMinScore = 300,          appendExtremityCodes = TRUE,          rvdSep = \"-\",          talArrayCorrection = TRUE) #>> Finding the closest reference amino acid sequences: #>> ================================================================================ #>>  #>> Time difference of 0.45 secs #>> Assessing frameshifts in nucleotide sequences: #>> ================================================================================ #>>  #>> Time difference of 412.25 secs #>> #**************************************** #>> #**   tellTale analysis done     ** #>> Current date:   Mon Sep 18 00:54:36 2023 #>> #_________Provided I/O parameters __________ #>> File of subject DNA sequences:  /tmp/RtmpBflNsA/file847d2820335a #>> TALE N-term CDS region detection HMM file:  /tmp/RtmpTfgQag/temp_libpath1b902266d9eb/tantale/extdata/hmmProfile/Xo_TALE_Nterm_CDS_profile.hmm #>> TALE repeat unit CDS detection HMM file:    /tmp/RtmpTfgQag/temp_libpath1b902266d9eb/tantale/extdata/hmmProfile/Xo_TALE_repeat_CDS_profile.hmm #>> TALE C-term CDS region detection HMM file:  /tmp/RtmpTfgQag/temp_libpath1b902266d9eb/tantale/extdata/hmmProfile/Xo_TALE_Cterm_CDS_profile.hmm #>> Output directory:   /home/cunnac/TEMP/test_tantale/telltale/BAI3-1-1_correction #>> #____________Other parameters________________ #>> TALE_NtermDNAHitMinScore    :   300 #>> repeatDNAHitMinScore    :   20 #>> TALE_CtermDNAHitMinScore    :   300 #>> minDomainHitsPerSubjSeq :   4 #>> mergeHits   :   TRUE #>> minGapWidth :   35 #>> extendedLength  :   300 #>> talArrayCorrection  :   TRUE #>> refForTalArrayCorrection    :   /tmp/RtmpTfgQag/temp_libpath1b902266d9eb/tantale/extdata/decipher_ref_tales_aa.fa.gz #>> frameShiftCorrection    :   -11 #>> #__________Summary measures of TALE search outcome__________ #>> Number of analysed subject sequences :  2 #>> Total number of TALE repeat DNA coding sequence motif hits found with the nhmmer approach:  155 #>> Total number of subject seqs with TALE motif hits after low hit number filtering:   1 #>> Total number of distinct regions (repeat arrays) with adjacent TALE motifs :    9 #>> Total number of 'complete' arrays (with both N- and C-term flanking motifs):    8 #>> Minimum array length (number of TALE domain hits):  1 #>> Maximum array length:   28 #>> Median array length:    20 #>> Number of gaps of size below 500nt between TALE motifs arrays:  1.5 #>> First quartile of size of gaps (below 500nt) between TALE motifs arrays:    108 #>> Median size of gaps (below 500nt) between TALE motifs arrays:   108 #>> Upper quartile of size of gaps (below 500nt) between TALE motifs arrays:    108 #>> #__________Noteworthy AnnoTale issues__________ #>> #  #>> #*************************"},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"overview-of-telltale-results","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences","what":"Overview of telltale results","title":"1. Mining TALE sequences in genomes with tantale","text":"Besides RVD sequences TALE ORFs, telltale() outputs useful files reports, can get information structure TALE sequences, corrections made, . First, take look “arrayReport.tsv”. take files 3 result folders, gather , see information can display . report takes result HMMer Tals DNA signatures detection, results correction step AnnoTALE analyze step. information contain: important points:","code":"# color set for ploting sunset10 <- c(\"#ba6b57\", \"#87556f\", \"#848ccf\", \"#93b5e1\", \"#6f4a8e\", \"#a2738c\", \"#ab93c9\", \"#588da8\", \"#726a95\", \"#bc658d\")  arrayReport_files <- list.files(telltale_outdir, \"arrayReport.tsv\", recursive = T, full.names = T)  arrayRp <- tibble() for (f in arrayReport_files) {   a <- read_tsv(f)   if (!any(c(\"predicted_ins_count\", \"predicted_dels_count\") %in% colnames(a)))     # 2 columns \"predicted_ins_count\" and \"predicted_dels_count\" are not displayed in the report in case of no correction     {a[c(\"predicted_ins_count\", \"predicted_dels_count\")] <- NA}    a$strain <- gsub(\"\\\\_.+\", \"\", basename(dirname(f)))   arrayRp <- rbind(arrayRp, a) } #>> Rows: 10 Columns: 15 #>> ── Column specification ──────────────────────────────────────────────────────── #>> Delimiter: \"\\t\" #>> chr (6): arrayID, OriginalSubjectName, Strand, ArraySeq, SeqOfRVD, LongestOR... #>> dbl (7): Start, End, NumberOfHits, N.terminusAAlength, C.terminusAAlength, L... #>> lgl (2): AllDomains, aberrantRepeat #>>  #>> ℹ Use `spec()` to retrieve the full column specification for this data. #>> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #>> Rows: 9 Columns: 17 #>> ── Column specification ──────────────────────────────────────────────────────── #>> Delimiter: \"\\t\" #>> chr (6): arrayID, OriginalSubjectName, Strand, ArraySeq, SeqOfRVD, LongestOR... #>> dbl (9): Start, End, NumberOfHits, predicted_ins_count, predicted_dels_count... #>> lgl (2): AllDomains, aberrantRepeat #>>  #>> ℹ Use `spec()` to retrieve the full column specification for this data. #>> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #>> Rows: 10 Columns: 15 #>> ── Column specification ──────────────────────────────────────────────────────── #>> Delimiter: \"\\t\" #>> chr (6): arrayID, OriginalSubjectName, Strand, ArraySeq, SeqOfRVD, LongestOR... #>> dbl (7): Start, End, NumberOfHits, N.terminusAAlength, C.terminusAAlength, L... #>> lgl (2): AllDomains, aberrantRepeat #>>  #>> ℹ Use `spec()` to retrieve the full column specification for this data. #>> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #>> Rows: 19 Columns: 15 #>> ── Column specification ──────────────────────────────────────────────────────── #>> Delimiter: \"\\t\" #>> chr (6): arrayID, OriginalSubjectName, Strand, ArraySeq, SeqOfRVD, LongestOR... #>> dbl (7): Start, End, NumberOfHits, N.terminusAAlength, C.terminusAAlength, L... #>> lgl (2): AllDomains, aberrantRepeat #>>  #>> ℹ Use `spec()` to retrieve the full column specification for this data. #>> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. arrayRp <- as_tibble(arrayRp) colnames(arrayRp) #>>  [1] \"arrayID\"               \"OriginalSubjectName\"   \"Start\"                 #>>  [4] \"End\"                   \"Strand\"                \"NumberOfHits\"          #>>  [7] \"ArraySeq\"              \"AllDomains\"            \"SeqOfRVD\"              #>> [10] \"aberrantRepeat\"        \"N.terminusAAlength\"    \"C.terminusAAlength\"    #>> [13] \"LongestOrfLength\"      \"OrfCovOverArrayLength\" \"LongestORFSeq\"         #>> [16] \"predicted_ins_count\"   \"predicted_dels_count\"  \"strain\""},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"count-alldomains-and-aberrantrepeat","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences > Overview of telltale results","what":"Count AllDomains and aberrantRepeat","title":"1. Mining TALE sequences in genomes with tantale","text":"","code":"ggplot(arrayRp) +   geom_bar(aes(x = strain, fill = AllDomains, color = aberrantRepeat), stat = \"count\") +   scale_fill_manual(values = c(\"grey\", sunset10[4])) +   scale_color_manual(values = c(\"black\", \"red\"), na.value = NA, labels = c(\"FALSE\", \"TRUE\", \"AnnoTALE_failed\")) +   guides(color = guide_legend(override.aes = list(fill = sunset10[4])))"},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"count-corrections","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences > Overview of telltale results","what":"Count corrections","title":"1. Mining TALE sequences in genomes with tantale","text":"total correction count per genome (case, 1 genome corrected)  correction count per array per genome  correction distribution per genome","code":"arrayRp_correction <- reshape2::melt(arrayRp[c(\"strain\", \"arrayID\", \"predicted_ins_count\", \"predicted_dels_count\")], value.name = \"count\", variable.name = \"type\") #>> Using strain, arrayID as id variables arrayRp_correction %<>% dplyr::arrange(strain, arrayID)  ggplot(arrayRp_correction) +   facet_wrap(vars(type), nrow = 2, scales = \"fixed\") +   geom_bar(aes(x = strain, fill = factor(count))) +   scale_fill_viridis_d() +   guides(fill = guide_legend(title = \"correction count\")) ggplot(na.omit(arrayRp_correction), aes(x = arrayID, y = count, color = type, shape = type)) +   facet_wrap(vars(strain), nrow = 2) +   scale_shape_manual(values = c(20, 2)) +   geom_point(size = 4) +   scale_color_manual(values = c(sunset10[4], \"black\"))+   theme(axis.text.x = element_text(angle = 90),         legend.direction = \"horizontal\", legend.position = \"bottom\") ggplot(na.omit(arrayRp_correction), aes(x = strain, y = count)) +   geom_dotplot(aes(fill = type, color = type), binaxis = \"y\", stackdir = \"center\", position = \"dodge\", binwidth = 1/10) +   scale_fill_manual(values = c(sunset10[4], \"black\")) +   scale_color_manual(values = c(sunset10[4], \"black\")) +   theme(legend.direction = \"horizontal\", legend.position = \"bottom\",         panel.grid.minor.y = element_blank())"},{"path":"https://scunnac.github.io/tantale/dev/articles/1_tale_mining.html","id":"count-domain-codon","dir":"Articles","previous_headings":"Finding TALEs loci on DNA sequences > Overview of telltale results","what":"Count domain codon","title":"1. Mining TALE sequences in genomes with tantale","text":"Another report can reveal “hitsReport.tsv”, contains results HMMer. information hitsReport see length distribution TALE protein domain (query_name) predicted HMMer.  seems BAI3-1-1 1 TALE truncated C-terminus caused artifactual indels. just “raw” result TALE motif detection. Now look “domainsReport.tsv”, similar report “hitsReport.tsv” except contains information TALE domains predicted AnnoTALE correction, , can make comparision infer impact correction protein sequences.  Firstly, domain detection AnnoTALE different HMMer amino acids. Secondly, truncated C-terminus BAI3-1-1 (84 aa) corrected length counterparts.","code":"hitsReport_files <- dir(telltale_outdir, \"hitsReport.tsv\", recursive = T, full.names = T)  hitsReport <- data.frame() for (f in hitsReport_files) {   a <- read.table(f, sep = \"\\t\", stringsAsFactors = F, header = T)   a$strain <- gsub(\"\\\\_.+\", \"\", basename(dirname(f)))   hitsReport <- rbind(hitsReport, a) } hitsReport$query_name <- factor(hitsReport$query_name, levels = c(\"TALE_N-terminus_CDS_aligned_curated\", \"TALE_repeat_CDS_aligned_curated\", \"TALE_C-terminus_CDS_aligned_curated_long\"), ordered = F) colnames(hitsReport) #>>  [1] \"arrayID\"          \"seqnames\"         \"start\"            \"end\"              #>>  [5] \"width\"            \"strand\"           \"nhmmerHitID\"      \"query_name\"       #>>  [9] \"hitID\"            \"seq\"              \"codon_count\"      \"frameshift_count\" #>> [13] \"strain\" ggplot(hitsReport) +   facet_wrap(vars(query_name), scales = \"free\", nrow = 1) +   geom_bar(aes(x = factor(codon_count), fill = strain), stat = \"count\", position = position_dodge(preserve = \"single\")) +   scale_fill_manual(values = sunset10) +   scale_y_sqrt(breaks = c(0, 1, 5, 10, 15, 100, 200, 350)) domainsReport_file <- dir(telltale_outdir, \"domainsReport.tsv\", recursive = T, full.names = T)  domainsReport <- data.frame() for (f in domainsReport_file) {   a <- read.table(f, sep = \"\\t\", stringsAsFactors = F, header = T)   a$strain <- gsub(\"\\\\_.+\", \"\", basename(dirname(f)))   domainsReport <- rbind(domainsReport, a) }  domainsReport$query_name <- factor(domainsReport$query_name, levels = c(\"N-terminus\", \"repeat\", \"C-terminus\")) domainsReport$codon_count <- as.factor(domainsReport$codon_count)  ggplot(domainsReport) +   facet_wrap(vars(query_name), scales = \"free\", nrow = 1) +   geom_bar(aes(x = codon_count, fill = strain), stat = \"count\", position = position_dodge(preserve = \"single\")) +   scale_fill_manual(values = sunset10) +   scale_y_sqrt(breaks = c(0, 1, 5, 10, 15, 100, 200, 350)) save.image(file.path(outdir, \"mining.RData\"))"},{"path":"https://scunnac.github.io/tantale/dev/articles/2_tale_classification.html","id":"classify-the-various-tale-sequences-into-groups-of-related-sequences","dir":"Articles","previous_headings":"","what":"Classify the various TALE sequences into groups of related sequences","title":"2. Classifying TALE sequences from genomes with tantale","text":"classify TALE groups, use function runDistal() run tool DisTal outputs similarity TALEs similarity repeats. TALE similarity table can taken input groupTales() clustering groups, repeats similarity can used plotting multiple alignment Tals within group.","code":""},{"path":"https://scunnac.github.io/tantale/dev/articles/2_tale_classification.html","id":"run-distal","dir":"Articles","previous_headings":"Classify the various TALE sequences into groups of related sequences","what":"Run DisTal","title":"2. Classifying TALE sequences from genomes with tantale","text":"run DisTal putative TALE ORFs (telltale output).","code":"distal_telltale <- file.path(outdir, \"distal\") unlink(distal_telltale, recursive = TRUE) dir.create(distal_telltale, showWarnings = F) telltale_cds <- file.path(distal_telltale, \"cds.fasta\") unlink(telltale_cds)   distal_telltale_input <- list.files(telltale_outdir,                                     \"putativeTalOrf.fasta\",                                     recursive = T, full.names = T) distal_telltale_input <- distal_telltale_input[!grepl(\"ROI\", distal_telltale_input, fixed = T)] for (input in distal_telltale_input) {   ttRunId <- gsub(\"\\\\_.+\", \"\", basename(dirname(input)))   seqs <- readBStringSet(input, seek.first.rec = T)   names(seqs) <- paste0(ttRunId, \"_\", names(seqs))   seqs <- seqs[width(seqs) != 0]   #cat(names(seqs))   writeXStringSet(seqs, telltale_cds, append = T) }  # run DisTal system.time({   distal_output <- runDistal(telltale_cds, outdir = distal_telltale, overwrite = T) }) #>>    user  system elapsed  #>> 628.701   0.121 628.859"},{"path":"https://scunnac.github.io/tantale/dev/articles/2_tale_classification.html","id":"run-the-r-implementation-of-distal","dir":"Articles","previous_headings":"Classify the various TALE sequences into groups of related sequences","what":"Run the R implementation of DisTal","title":"2. Classifying TALE sequences from genomes with tantale","text":"First use tellTale output directories genome get information TALE parts (ie domains). final output tibble single part per row. kind representation quite easy make summary plots like one example:  Now, tibble, can also run R implementation Distal Perl code. Clearly, “DECIPHER” method pairwise alignment domains aa sequences much faster others.","code":"# distalrOutDir <- file.path(outdir, \"distalr\") # unlink(distalrOutDir, recursive = TRUE) # dir.create(distalrOutDir, showWarnings = F)   taleParts <- lapply(list.dirs(telltale_outdir, recursive = FALSE), function(ttGenomeDir) {   genomeId <- gsub(\"_.*correction\", \"\", basename(ttGenomeDir))   logger::log_debug(\"Current genome: {genomeId}\")   taleParts <- getTaleParts(ttGenomeDir) %>%     mutate(arrayID = paste0(genomeId, \"_\", arrayID))   return(taleParts) }) %>%   bind_rows()  DT::datatable(head(taleParts), caption = \"An example of the content of the taleParts tibble.\") partsForPlots <- taleParts %>%   mutate(label = if_else(domainType == \"repeat\", rvd, \"\"),          aaSeqLength = factor(nchar(aaSeq))   ) partsForPlots %>% ggplot(mapping = aes(fill = aaSeqLength,                                        color = domainType,                                        label = label,                                        y = arrayID,                                        x = positionInArray),                          color = isNaAaSeq) +   scale_color_viridis_d(option = \"rocket\") +   scale_fill_discrete() +   scale_x_continuous(breaks = 1:50, minor_breaks = NULL) +   geom_point(shape = 21, size = 5, stroke = 0.9) +   ggnewscale::new_scale_color() +   ggnewscale::new_scale_fill() +   geom_text(size = 2.1, color = \"white\") +    facet_grid(seqnames~ ., scales = \"free_y\", space = \"free\") +   labs(title = \"Overview of TALE composition by genome\") +   theme_light() partsForDistalr <- taleParts  system.time({distalr_bs_output <- distalr(taleParts = partsForDistalr,                              repeats.cluster.h.cut = 10, ncores = 6,                              pairwiseAlnMethod = \"Biostrings\")}) #>>     user   system  elapsed  #>> 1954.326    2.380  423.562  system.time({distalr_deci_output <- distalr(taleParts = partsForDistalr,                               repeats.cluster.h.cut = 10, ncores = 6,                               pairwiseAlnMethod = \"DECIPHER\")}) #>>    user  system elapsed  #>>  15.718   0.084   4.875  system.time({distalr_mms_output <- distalr(taleParts = partsForDistalr,                               repeats.cluster.h.cut = 10, ncores = 6,                               pairwiseAlnMethod = \"mmseq2\",                               condaBinPath = \"/home/cunnac/bin/miniconda3/condabin/conda\")}) #>> Joining with `by = join_by(query, target)` #>>    user  system elapsed  #>>  22.367   5.111  15.790"},{"path":"https://scunnac.github.io/tantale/dev/articles/2_tale_classification.html","id":"contrast-the-output-of-the-various-distal-functions","dir":"Articles","previous_headings":"Classify the various TALE sequences into groups of related sequences","what":"Contrast the output of the various distal functions","title":"2. Classifying TALE sequences from genomes with tantale","text":"Now, can take look whether results original Distal script consistent R implementation program.   correlation TALE pairwise similarity scores output various distal flavors remarkably high.","code":"talSimOutAgregated <- list(distalALV = distal_output$tal.similarity,      distalDECI = distalr_deci_output$tal.similarity,      distalBIOS = distalr_bs_output$tal.similarity,      distalMMS = distalr_mms_output$tal.similarity ) %>% bind_rows(.id = \"method\")  talSimOutAgregatedLong <- reshape2::dcast(talSimOutAgregated %>% select(method, TAL1, TAL2, Sim),                                           formula = method ~ TAL1 + TAL2, value.var = \"Sim\"                                             ) rownames(talSimOutAgregatedLong) <- talSimOutAgregatedLong$method talSimOutAgregatedLong$method <- NULL talSimOutAgregatedLong %<>% as.matrix() %>% t() rownames(talSimOutAgregatedLong) <- NULL  corr_matrix <- cor(talSimOutAgregatedLong) knitr::kable(corr_matrix) ggcorrplot(corr_matrix) talSimOutAgregated <- reshape2::dcast(talSimOutAgregated %>% select(method, TAL1, TAL2, Sim),                                           formula = TAL1 + TAL2 ~ method, value.var = \"Sim\"                                             ) %>% as_tibble() # talSimOutAgregated %>% #   select(-distalBIOS) %>% #   mutate(pointLab = paste(TAL1, TAL2, sep = \"|\")) %>% #   ggplot(mapping = aes(x = distalALV, distalDECI)) + #   geom_point() + #   geom_abline(intercept = 0, slope = 1)  pairs(talSimOutAgregated[3:6], pch = 20, cex = 0.5, lower.panel = NULL)"},{"path":"https://scunnac.github.io/tantale/dev/articles/2_tale_classification.html","id":"allocate-tales-to-groups-of-related-sequences","dir":"Articles","previous_headings":"Classify the various TALE sequences into groups of related sequences","what":"Allocate TALEs to groups of related sequences","title":"2. Classifying TALE sequences from genomes with tantale","text":"can compare hierarchical trees obtained original Distal tree (left) distalr DICEPHER (right). PXO86 Asian strain TALEs rather distantly related African ones, part trees PXO86 TALEs really meaningful context.   Based silhouette values, groupTales() take value elbow curve. case manually took k = 22.","code":"k <- 22 groupsALV <- invisible(groupTales(taleSim = distal_output$tal.similarity,                      plotTree = TRUE, k = k, k_test = 10:40,                      method = \"k-medoids\")) #>> tale tree will not be plotted! #>> Number of groups is decided based on the provided value of k: 22 groupsDECI <- invisible(groupTales(taleSim = distalr_deci_output$tal.similarity,                      plotTree = TRUE, k = k, k_test = 10:40,                      method = \"k-medoids\")) #>> tale tree will not be plotted! #>> Number of groups is decided based on the provided value of k: 22 groupsBIOS <- invisible(groupTales(taleSim = distalr_bs_output$tal.similarity,                      plotTree = TRUE, k = k, k_test = 10:40,                      method = \"k-medoids\")) #>> tale tree will not be plotted! #>> Number of groups is decided based on the provided value of k: 22 groupsMMS <- invisible(groupTales(taleSim = distalr_mms_output$tal.similarity,                      plotTree = TRUE, k = k, k_test = 10:40,                      method = \"k-medoids\")) #>> tale tree will not be plotted! #>> Number of groups is decided based on the provided value of k: 22 grp <- groupTales(taleSim = distal_output$tal.similarity,                      plotTree = TRUE, k = k,                      method = \"hclust\") grp <- groupTales(taleSim = distalr_deci_output$tal.similarity,                      plotTree = TRUE, k = k,                      method = \"hclust\") grp <- groupTales(taleSim = distalr_bs_output$tal.similarity,                      plotTree = TRUE, k = k,                      method = \"hclust\") grp <- groupTales(taleSim = distalr_mms_output$tal.similarity,                      plotTree = TRUE, k = k,                      method = \"hclust\") getTALEsTree <- function(taleSim) {   distMat <- 100 - reshape2::acast(taleSim, formula = TAL1 ~ TAL2, value.var = \"Sim\")   hclust(dist(distMat, method = \"euclidean\"), method = \"ward.D\") }  op <- par() suppressWarnings(par(cex = 0.5)) ape::cophyloplot(getTALEsTree(distal_output$tal.similarity) %>% as.phylo(),                  getTALEsTree(distalr_deci_output$tal.similarity) %>% as.phylo(),                  assoc = matrix(rep(distal_output$tal.similarity$TAL1 %>% unique() %>% as.character(), 2),                                 ncol = 2, byrow = FALSE),                  length.line = 0, space=200, gap = 10,                  col = \"red\") suppressWarnings(par(op)) op <- par() suppressWarnings(par(cex = 0.5)) ape::cophyloplot(getTALEsTree(distal_output$tal.similarity) %>% as.phylo(),                  getTALEsTree(distalr_mms_output$tal.similarity) %>% as.phylo(),                  assoc = matrix(rep(distal_output$tal.similarity$TAL1 %>% unique() %>% as.character(), 2),                                 ncol = 2, byrow = FALSE),                  length.line = 0, space=200, gap = 10,                  col = \"red\") suppressWarnings(par(op)) taleGroups <- groupsDECI %>% as_tibble() %>% arrange(group, name) knitr::kable(head(taleGroups, n= 12)) save.image(file.path(outdir, \"mining.RData\"))"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"tale-domains-multiple-alignments-with-similarity","dir":"Articles","previous_headings":"","what":"TALE domains multiple alignments with similarity","title":"3. Multiple alignment of TALE sequences with tantale","text":"interested performing TALEs multiple alignments (distal domains RVDs) makes sense align TALEs related thus belong group. keep mind buildRepeatMsa() function can take arbitrary set repeatID sequences RVD sequences. right now need mapping distal parts IDs cognate RVDs. can done number ways let’s use one rely `run``.","code":"rvdSeqs_fasta <- list.files(telltale_outdir, \"rvdSequences.fas\", recursive = T, full.names = T) telltale_rvd <- file.path(distal_telltale, \"rvd.fasta\") unlink(telltale_rvd)  # rename of RVD sequences to distinguish sequences between different strains for (input in rvdSeqs_fasta) {   id <- gsub(\"\\\\_.+\", \"\", basename(dirname(input)))   seqs <- readBStringSet(input, seek.first.rec = T)   names(seqs) <- paste0(id, \"_\", names(seqs))   names(seqs) <- stringr::str_trim(names(seqs))   seqs <- seqs[width(seqs) != 0]   writeXStringSet(seqs, telltale_rvd, append = T) }  rvdVectors <- toListOfSplitedStr(telltale_rvd, sep = \"-\") repeatVectors <- toListOfSplitedStr(distalr_deci_output$coded.repeats.str, sep = \" \")  # map repeatID to RVD rep2rvd <- getRepeat2RvdMapping(talesRepeatVectors = repeatVectors, talesRvdVectors = rvdVectors) datatable(rep2rvd, options = list(pageLength = 5))"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"performing-msa-using-repeat-strings","dir":"Articles","previous_headings":"TALE domains multiple alignments with similarity","what":"Performing MSA using repeat strings","title":"3. Multiple alignment of TALE sequences with tantale","text":"possible appropriate align repeat/domains rather RVD. mafft (underlying aligner), hands, combo gap opening score = 0 (--op 0) gap extending score = 5 (--ep 5) (current default values) yields better alignments.","code":"repeatVectors <- distalr_deci_output$coded.repeats.str repeatSim <- distalr_deci_output$repeat.similarity #distal_output$repeat.similarity   lapply(sort(unique(taleGroups$group)), function(G) {repeatVectors[taleGroups$name[taleGroups$group == G]]})  repeatMsaByGroup_withSim <- lapply(sort(unique(taleGroups$group)), function(G) {   try({buildRepeatMsa(inputSeqs = repeatVectors[taleGroups$name[taleGroups$group == G]],                       sep = \" \",                       distalRepeatSims = repeatSim,                       mafftOpts = \"--globalpair --weighti 1 --maxiterate 1000 --quiet --reorder --op 0 --ep 5 --thread 1\")   }) } )"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"plotting-msa-with-rvds-as-text-and-coloring-based-on-repeat-similarity","dir":"Articles","previous_headings":"TALE domains multiple alignments with similarity","what":"Plotting MSA with RVDs as text and coloring based on repeat similarity","title":"3. Multiple alignment of TALE sequences with tantale","text":"type plot, need map repeatID RVD getRepeat2RvdMapping(), convert repeat MSA RVD MSA convertRepeat2RvdAlign. use converting function rather using buildRepeatMsa() creat MSA RVD disagreement .","code":"# convert repeat MSA to RVD MSA repeatMSA <- repeatMsaByGroup_withSim[[2]] rvdMSA <-  convertRepeat2RvdAlign(repeatAlign = repeatMSA, repeat2RvdMapping = rep2rvd)  # plot MSA tantale::heatmap_msa(talsim = distalr_deci_output$tal.similarity,                      repeatAlign = repeatMSA,                      repeatSim = distalr_deci_output$repeat.similarity,                      rvdAlign = rvdMSA,                      plot.type = \"repeat.similarity\",                      main = \"Repeat MSA with similarity - Group 2\")"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"plotting-msa-with-repeat-ids-as-text-and-coloring-based-on-repeat-clustering","dir":"Articles","previous_headings":"TALE domains multiple alignments with similarity","what":"Plotting MSA with repeat Ids as text and coloring based on repeat clustering","title":"3. Multiple alignment of TALE sequences with tantale","text":"","code":"tantale::heatmap_msa(talsim = distalr_deci_output$tal.similarity,                      repeatAlign = repeatMSA,                      repeatSim = distalr_deci_output$repeat.similarity,                      plot.type = \"repeat.clusters\",                      main = \"Repeat Cluster MSA - Group 2\")"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"plotting-msa-with-rvd-as-text-and-coloring-based-on-repeat-clustering","dir":"Articles","previous_headings":"TALE domains multiple alignments with similarity","what":"Plotting MSA with RVD as text and coloring based on repeat clustering","title":"3. Multiple alignment of TALE sequences with tantale","text":"plot, also use RVD MSA converted repeat MSA.","code":"tantale::heatmap_msa(talsim = distalr_deci_output$tal.similarity,                      repeatAlign = repeatMSA,                      repeatSim = distalr_deci_output$repeat.similarity,                      rvdAlign = rvdMSA,                      plot.type = \"repeat.clusters.with.rvd\",                      main = \"Repeat Cluster MSA with RVD - Group 2\",                      consensusSeq = TRUE)"},{"path":"https://scunnac.github.io/tantale/dev/articles/3_tale_msa.html","id":"generate-an-overview-of-talomes","dir":"Articles","previous_headings":"","what":"Generate an overview of talomes","title":"3. Multiple alignment of TALE sequences with tantale","text":"TALE classification result RVD sequences, can represent RVD sequence variants strains TALE group example .","code":"tale_annotation <- merge(taleGroups,                           data.frame(\"name\" = names(rvdVectors),                                     \"rvdseq\" = sapply(rvdVectors,                                                       function(i) paste(i, collapse = \"-\")                                                       ), stringsAsFactors = FALSE                                     )                          ) tale_annotation$strain <- gsub(\"\\\\_.+\", \"\", tale_annotation$name)  heatmap_talomes(tale_annotation,                 col = \"group\", row = \"strain\",                 value = \"rvdseq\",                 mapcol = sunset10) save.image(file.path(outdir, \"mining.RData\"))"},{"path":"https://scunnac.github.io/tantale/dev/articles/4_tale_target_prediction.html","id":"tale-target-prediction","dir":"Articles","previous_headings":"","what":"TALE Target prediction","title":"4. TALE targets predictions with tantale","text":"wrap Talvez Preditale tools 2 functions, talvez() preditale(), take types RVD sequences promoter DNA sequences inputs output data frame containing predictions. need concatenate RVD sequences 3 telltale outputs remove NTERM CTERM markers.","code":"## rvd sequences from telltale output rvdSeqs_tt <-  readBStringSet(telltale_rvd) rvdSeqs_tt <- gsub(\"\\\\-{0,1}\\\\w{5}\\\\-{0,1}\", \"\",rvdSeqs_tt) %>% BStringSet() # remove NTERM and CTERM predict_input <- file.path(outdir, \"rvd_to_predict.fasta\") writeXStringSet(rvdSeqs_tt, predict_input)   ## promoter sequences rvdSeqsXstrings <-  predict_input subjDnaSeqFile <-  system.file(\"extdata\", \"cladeIII_sweet_promoters.fasta\", package = \"tantale\", mustWork = T) readBStringSet(subjDnaSeqFile) %>% names #>> [1] \"SWEET11p_IR64_Sense\"       \"SWEET11p_BT07_Sense\"       #>> [3] \"SWEET11p_93-11_Sense\"      \"SWEET11p_Nipponbare_Sense\" #>> [5] \"SWEET13p_BT7_Sense\"        \"SWEET13p_IR24_Sense\"       #>> [7] \"SWEET13p_Nipponbare_Sense\" \"SWEET14p_BT07_Sense\"       #>> [9] \"SWEET14p_Nipponbare_Sense\""},{"path":"https://scunnac.github.io/tantale/dev/articles/4_tale_target_prediction.html","id":"talvez","dir":"Articles","previous_headings":"TALE Target prediction","what":"talvez","title":"4. TALE targets predictions with tantale","text":"output talvez() contains position, score rank prediction. example summarizing prediction result heatmap.2() (scores display color scale, black refers prediction):  see RVD sequences match promoter region, supply prediction table promoter sequence genomic range plotTaleTargetPred():","code":"talvezPreds <- talvez(rvdSeqs = rvdSeqsXstrings,                       subjDnaSeqFile = subjDnaSeqFile,                       optParam = \"-t 0 -l 19\",                       condaBinPath = \"/home/cunnac/bin/miniconda3/condabin/conda\") datatable(talvezPreds, options = list(pageLength = 1)) talvezPreds$strain <- gsub(\"\\\\_.+\", \"\", talvezPreds$taleId) talvezPreds$group <- sapply(talvezPreds$taleId, function(id) {   ifelse(id %in% taleGroups$name, taleGroups$group[taleGroups$name == id], NA) }, USE.NAMES = F)  slctPromoters <- c(\"SWEET14p_Nipponbare_Sense\", \"SWEET13p_Nipponbare_Sense\", \"SWEET11p_Nipponbare_Sense\") selectedPreds <- talvezPreds %>%   dplyr::filter(subjSeqId %in% slctPromoters)   selectedPredsMat <- selectedPreds %>%   reshape2::acast(taleId ~ subjSeqId, max, na.rm = TRUE, value.var = \"score\", fill = as.single(NA))  heatmap.2(selectedPredsMat,                   col = viridis::viridis(20), #cm.colors(255),                   sepwidth=c(0.02,0.02), sepcolor=\"white\", colsep = 1:ncol(selectedPredsMat), rowsep = 1:nrow(selectedPredsMat),                   trace=\"none\",                   margins = c(10, 15),                   cexRow = 1,                   cexCol = 1, srtCol = 40,                   density.info= \"histogram\", key.xlab = \"Pred. Score\", key.title = NA,                   lwid = c(1,5), lhei = c(1,5),                   dendrogram = \"none\", Rowv = NULL, Colv = NULL,                   na.color = \"black\",                   main = \"Talvez prediction\"                   ) grFilter <- \"SWEET14p_Nipponbare_Sense:340-450\" plotTaleTargetPred(predResults = selectedPreds, subjDnaSeqFile = subjDnaSeqFile, filterRange = grFilter)"},{"path":"https://scunnac.github.io/tantale/dev/articles/4_tale_target_prediction.html","id":"preditale","dir":"Articles","previous_headings":"TALE Target prediction","what":"preditale","title":"4. TALE targets predictions with tantale","text":"Preditale, get similar data frame output p value additionally. Preditale takes little bit longer Talvez may give different predictions.","code":"preditalePreds <- preditale(rvdSeqs = rvdSeqsXstrings, subjDnaSeqFile = subjDnaSeqFile, outDir = NULL) datatable(preditalePreds, options = list(pageLength = 1)) talvezPreds$strain <- gsub(\"\\\\_.+\", \"\", talvezPreds$taleId) talvezPreds$group <- sapply(talvezPreds$taleId, function(id) {   ifelse(id %in% taleGroups$name, taleGroups$group[taleGroups$name == id], NA) }, USE.NAMES = F)  slctPromoters <- c(\"SWEET14p_Nipponbare_Sense\", \"SWEET13p_Nipponbare_Sense\", \"SWEET11p_Nipponbare_Sense\") selectedPreds <- preditalePreds %>%   dplyr::filter(subjSeqId %in% slctPromoters)   selectedPredsMat <- selectedPreds %>%   reshape2::acast(taleId ~ subjSeqId, max, na.rm = TRUE, value.var = \"score\", fill = as.single(NA))  gplots::heatmap.2(selectedPredsMat,                   col = viridis::viridis(20), #cm.colors(255),                   sepwidth=c(0.02,0.02), sepcolor=\"white\", colsep = 1:ncol(selectedPredsMat), rowsep = 1:nrow(selectedPredsMat),                   trace=\"none\",                   margins = c(10, 15),                   cexRow = 1,                   cexCol = 1, srtCol = 40,                   density.info= \"histogram\", key.xlab = \"Pred. Score\", key.title = NA,                   lwid = c(1,5), lhei = c(1,5),                   dendrogram = \"none\", Rowv = NULL, Colv = NULL,                   na.color = \"black\",                   main = \"Preditale prediction\"                   ) grFilter <- \"SWEET14p_Nipponbare_Sense:340-450\" plotTaleTargetPred(predResults = selectedPreds, subjDnaSeqFile = subjDnaSeqFile, filterRange = grFilter) save.image(file.path(outdir, \"mining.RData\"))"},{"path":"https://scunnac.github.io/tantale/dev/articles/4_tale_target_prediction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"4. TALE targets predictions with tantale","text":"","code":"sessioninfo::session_info() #>> ─ Session info ─────────────────────────────────────────────────────────────── #>>  setting  value #>>  version  R version 4.3.1 (2023-06-16) #>>  os       Ubuntu 22.04.3 LTS #>>  system   x86_64, linux-gnu #>>  ui       X11 #>>  language en #>>  collate  en_US.UTF-8 #>>  ctype    en_US.UTF-8 #>>  tz       Europe/Paris #>>  date     2023-09-18 #>>  pandoc   3.1.1 @ /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) #>>  #>> ─ Packages ─────────────────────────────────────────────────────────────────── #>>  package              * version   date (UTC) lib source #>>  abind                  1.4-5     2016-07-21 [2] CRAN (R 4.3.1) #>>  AnnotationDbi          1.62.2    2023-07-02 [2] Bioconductor #>>  AnnotationFilter       1.24.0    2023-04-25 [2] Bioconductor #>>  ape                  * 5.7-1     2023-03-13 [2] CRAN (R 4.3.1) #>>  aplot                  0.2.0     2023-08-09 [2] CRAN (R 4.3.1) #>>  backports              1.4.1     2021-12-13 [2] CRAN (R 4.3.1) #>>  base64enc              0.1-3     2015-07-28 [2] CRAN (R 4.3.1) #>>  Biobase                2.60.0    2023-04-25 [2] Bioconductor #>>  BiocFileCache          2.8.0     2023-04-25 [2] Bioconductor #>>  BiocGenerics         * 0.46.0    2023-04-25 [2] Bioconductor #>>  BiocIO                 1.10.0    2023-04-25 [2] Bioconductor #>>  BiocParallel           1.34.2    2023-05-22 [2] Bioconductor #>>  biomaRt                2.56.1    2023-06-09 [2] Bioconductor #>>  Biostrings           * 2.68.1    2023-05-16 [2] Bioconductor #>>  biovizBase             1.48.0    2023-04-25 [2] Bioconductor #>>  bit                    4.0.5     2022-11-15 [2] CRAN (R 4.3.1) #>>  bit64                  4.0.5     2020-08-30 [2] CRAN (R 4.3.1) #>>  bitops                 1.0-7     2021-04-24 [2] CRAN (R 4.3.1) #>>  blob                   1.2.4     2023-03-17 [2] CRAN (R 4.3.1) #>>  BSgenome               1.68.0    2023-04-25 [2] Bioconductor #>>  bslib                  0.5.1     2023-08-11 [2] CRAN (R 4.3.1) #>>  cachem                 1.0.8     2023-05-01 [2] CRAN (R 4.3.1) #>>  callr                  3.7.3     2022-11-02 [2] CRAN (R 4.3.1) #>>  caTools                1.18.2    2021-03-28 [2] CRAN (R 4.3.1) #>>  checkmate              2.2.0     2023-04-27 [2] CRAN (R 4.3.1) #>>  cli                    3.6.1     2023-03-23 [2] CRAN (R 4.3.1) #>>  cluster                2.1.4     2022-08-22 [2] CRAN (R 4.3.1) #>>  codetools              0.2-19    2023-02-01 [2] CRAN (R 4.3.1) #>>  colorspace             2.1-0     2023-01-23 [2] CRAN (R 4.3.1) #>>  corrr                * 0.4.4     2022-08-16 [2] CRAN (R 4.3.1) #>>  crayon                 1.5.2     2022-09-29 [2] CRAN (R 4.3.1) #>>  crosstalk              1.2.0     2021-11-04 [2] CRAN (R 4.3.1) #>>  curl                   5.0.2     2023-08-14 [2] CRAN (R 4.3.1) #>>  data.table             1.14.8    2023-02-17 [2] CRAN (R 4.3.1) #>>  DBI                    1.1.3     2022-06-18 [2] CRAN (R 4.3.1) #>>  dbplyr                 2.3.3     2023-07-07 [2] CRAN (R 4.3.1) #>>  DelayedArray           0.26.7    2023-07-28 [2] Bioconductor #>>  desc                   1.4.2     2022-09-08 [2] CRAN (R 4.3.1) #>>  devtools             * 2.4.5     2022-10-11 [2] CRAN (R 4.3.1) #>>  dichromat              2.0-0.1   2022-05-02 [2] CRAN (R 4.3.1) #>>  digest                 0.6.33    2023-07-07 [2] CRAN (R 4.3.1) #>>  dplyr                * 1.1.3     2023-09-03 [2] CRAN (R 4.3.1) #>>  DT                   * 0.29      2023-08-29 [2] CRAN (R 4.3.1) #>>  ellipsis               0.3.2     2021-04-29 [2] CRAN (R 4.3.1) #>>  ensembldb              2.24.0    2023-04-25 [2] Bioconductor #>>  evaluate               0.21      2023-05-05 [2] CRAN (R 4.3.1) #>>  fansi                  1.0.4     2023-01-22 [2] CRAN (R 4.3.1) #>>  farver                 2.1.1     2022-07-06 [2] CRAN (R 4.3.1) #>>  fastmap                1.1.1     2023-02-24 [2] CRAN (R 4.3.1) #>>  filelock               1.0.2     2018-10-05 [2] CRAN (R 4.3.1) #>>  forcats              * 1.0.0     2023-01-29 [2] CRAN (R 4.3.1) #>>  foreign                0.8-84    2022-12-06 [2] CRAN (R 4.3.1) #>>  Formula                1.2-5     2023-02-24 [2] CRAN (R 4.3.1) #>>  fs                     1.6.3     2023-07-20 [2] CRAN (R 4.3.1) #>>  generics               0.1.3     2022-07-05 [2] CRAN (R 4.3.1) #>>  GenomeInfoDb         * 1.36.2    2023-08-25 [2] Bioconductor #>>  GenomeInfoDbData       1.2.10    2023-09-03 [2] Bioconductor #>>  GenomicAlignments      1.36.0    2023-04-25 [2] Bioconductor #>>  GenomicFeatures        1.52.2    2023-08-25 [2] Bioconductor #>>  GenomicRanges          1.52.0    2023-04-25 [2] Bioconductor #>>  ggcorrplot           * 0.1.4     2022-09-27 [2] CRAN (R 4.3.1) #>>  ggfun                  0.1.2     2023-08-09 [2] CRAN (R 4.3.1) #>>  ggplot2              * 3.4.3     2023-08-14 [2] CRAN (R 4.3.1) #>>  ggplotify              0.1.2     2023-08-09 [2] CRAN (R 4.3.1) #>>  ggtree               * 3.8.2     2023-07-24 [2] Bioconductor #>>  glue                   1.6.2     2022-02-24 [2] CRAN (R 4.3.1) #>>  gplots               * 3.1.3     2022-04-25 [2] CRAN (R 4.3.1) #>>  gridExtra              2.3       2017-09-09 [2] CRAN (R 4.3.1) #>>  gridGraphics           0.5-1     2020-12-13 [2] CRAN (R 4.3.1) #>>  gtable                 0.3.4     2023-08-21 [2] CRAN (R 4.3.1) #>>  gtools                 3.9.4     2022-11-27 [2] CRAN (R 4.3.1) #>>  highr                  0.10      2022-12-22 [2] CRAN (R 4.3.1) #>>  Hmisc                  5.1-0     2023-05-08 [2] CRAN (R 4.3.1) #>>  hms                    1.1.3     2023-03-21 [2] CRAN (R 4.3.1) #>>  htmlTable              2.4.1     2022-07-07 [2] CRAN (R 4.3.1) #>>  htmltools              0.5.6     2023-08-10 [2] CRAN (R 4.3.1) #>>  htmlwidgets            1.6.2     2023-03-17 [2] CRAN (R 4.3.1) #>>  httpuv                 1.6.11    2023-05-11 [2] CRAN (R 4.3.1) #>>  httr                   1.4.7     2023-08-15 [2] CRAN (R 4.3.1) #>>  IRanges              * 2.34.1    2023-06-22 [2] Bioconductor #>>  jquerylib              0.1.4     2021-04-26 [2] CRAN (R 4.3.1) #>>  jsonlite               1.8.7     2023-06-29 [2] CRAN (R 4.3.1) #>>  KEGGREST               1.40.0    2023-04-25 [2] Bioconductor #>>  KernSmooth             2.23-22   2023-07-10 [2] CRAN (R 4.3.1) #>>  knitr                  1.43      2023-05-25 [2] CRAN (R 4.3.1) #>>  later                  1.3.1     2023-05-02 [2] CRAN (R 4.3.1) #>>  lattice                0.21-8    2023-04-05 [2] CRAN (R 4.3.1) #>>  lazyeval               0.2.2     2019-03-15 [2] CRAN (R 4.3.1) #>>  lifecycle              1.0.3     2022-10-07 [2] CRAN (R 4.3.1) #>>  logger                 0.2.2     2021-10-19 [2] CRAN (R 4.3.1) #>>  lubridate            * 1.9.2     2023-02-10 [2] CRAN (R 4.3.1) #>>  magrittr             * 2.0.3     2022-03-30 [2] CRAN (R 4.3.1) #>>  Matrix                 1.6-1     2023-08-14 [2] CRAN (R 4.3.1) #>>  MatrixGenerics         1.12.3    2023-07-30 [2] Bioconductor #>>  matrixStats            1.0.0     2023-06-02 [2] CRAN (R 4.3.1) #>>  memoise                2.0.1     2021-11-26 [2] CRAN (R 4.3.1) #>>  mime                   0.12      2021-09-28 [2] CRAN (R 4.3.1) #>>  miniUI                 0.1.1.1   2018-05-18 [2] CRAN (R 4.3.1) #>>  munsell                0.5.0     2018-06-12 [2] CRAN (R 4.3.1) #>>  nlme                   3.1-163   2023-08-09 [2] CRAN (R 4.3.1) #>>  nnet                   7.3-19    2023-05-03 [2] CRAN (R 4.3.1) #>>  patchwork              1.1.3     2023-08-14 [2] CRAN (R 4.3.1) #>>  pillar                 1.9.0     2023-03-22 [2] CRAN (R 4.3.1) #>>  pkgbuild               1.4.2     2023-06-26 [2] CRAN (R 4.3.1) #>>  pkgconfig              2.0.3     2019-09-22 [2] CRAN (R 4.3.1) #>>  pkgdown                2.0.7     2022-12-14 [2] CRAN (R 4.3.1) #>>  pkgload                1.3.2.1   2023-07-08 [2] CRAN (R 4.3.1) #>>  plyr                   1.8.8     2022-11-11 [2] CRAN (R 4.3.1) #>>  png                    0.1-8     2022-11-29 [2] CRAN (R 4.3.1) #>>  prettyunits            1.1.1     2020-01-24 [2] CRAN (R 4.3.1) #>>  processx               3.8.2     2023-06-30 [2] CRAN (R 4.3.1) #>>  profvis                0.3.8     2023-05-02 [2] CRAN (R 4.3.1) #>>  progress               1.2.2     2019-05-16 [2] CRAN (R 4.3.1) #>>  promises               1.2.1     2023-08-10 [2] CRAN (R 4.3.1) #>>  ProtGenerics           1.32.0    2023-04-25 [2] Bioconductor #>>  ps                     1.7.5     2023-04-18 [2] CRAN (R 4.3.1) #>>  purrr                * 1.0.2     2023-08-10 [2] CRAN (R 4.3.1) #>>  R6                     2.5.1     2021-08-19 [2] CRAN (R 4.3.1) #>>  ragg                   1.2.5     2023-01-12 [2] CRAN (R 4.3.1) #>>  rappdirs               0.3.3     2021-01-31 [2] CRAN (R 4.3.1) #>>  RColorBrewer           1.1-3     2022-04-03 [2] CRAN (R 4.3.1) #>>  Rcpp                   1.0.11    2023-07-06 [2] CRAN (R 4.3.1) #>>  RCurl                  1.98-1.12 2023-03-27 [2] CRAN (R 4.3.1) #>>  readr                * 2.1.4     2023-02-10 [2] CRAN (R 4.3.1) #>>  remotes                2.4.2.1   2023-07-18 [2] CRAN (R 4.3.1) #>>  reshape2               1.4.4     2020-04-09 [2] CRAN (R 4.3.1) #>>  restfulr               0.0.15    2022-06-16 [2] CRAN (R 4.3.1) #>>  reticulate             1.31      2023-08-10 [2] CRAN (R 4.3.1) #>>  rjson                  0.2.21    2022-01-09 [2] CRAN (R 4.3.1) #>>  rlang                  1.1.1     2023-04-28 [2] CRAN (R 4.3.1) #>>  rmarkdown              2.24      2023-08-14 [2] CRAN (R 4.3.1) #>>  rpart                  4.1.19    2022-10-21 [2] CRAN (R 4.3.1) #>>  rprojroot              2.0.3     2022-04-02 [2] CRAN (R 4.3.1) #>>  Rsamtools              2.16.0    2023-04-25 [2] Bioconductor #>>  RSQLite                2.3.1     2023-04-03 [2] CRAN (R 4.3.1) #>>  rstudioapi             0.15.0    2023-07-07 [2] CRAN (R 4.3.1) #>>  rtracklayer            1.60.1    2023-08-15 [2] Bioconductor #>>  S4Arrays               1.0.6     2023-08-30 [2] Bioconductor #>>  S4Vectors            * 0.38.1    2023-05-02 [2] Bioconductor #>>  sass                   0.4.7     2023-07-15 [2] CRAN (R 4.3.1) #>>  scales                 1.2.1     2022-08-20 [2] CRAN (R 4.3.1) #>>  sessioninfo            1.2.2     2021-12-06 [2] CRAN (R 4.3.1) #>>  shiny                  1.7.5     2023-08-12 [2] CRAN (R 4.3.1) #>>  stringi                1.7.12    2023-01-11 [2] CRAN (R 4.3.1) #>>  stringr              * 1.5.0     2022-12-02 [2] CRAN (R 4.3.1) #>>  SummarizedExperiment   1.30.2    2023-06-06 [2] Bioconductor #>>  systemfonts            1.0.4     2022-02-11 [2] CRAN (R 4.3.1) #>>  tantale              * 0.1.9550  2023-09-17 [1] Bioconductor #>>  textshaping            0.3.6     2021-10-13 [2] CRAN (R 4.3.1) #>>  tibble               * 3.2.1     2023-03-20 [2] CRAN (R 4.3.1) #>>  tidyr                * 1.3.0     2023-01-24 [2] CRAN (R 4.3.1) #>>  tidyselect             1.2.0     2022-10-10 [2] CRAN (R 4.3.1) #>>  tidytree               0.4.5     2023-08-10 [2] CRAN (R 4.3.1) #>>  tidyverse            * 2.0.0     2023-02-22 [2] CRAN (R 4.3.1) #>>  timechange             0.2.0     2023-01-11 [2] CRAN (R 4.3.1) #>>  treeio                 1.24.3    2023-07-24 [2] Bioconductor #>>  tzdb                   0.4.0     2023-05-12 [2] CRAN (R 4.3.1) #>>  urlchecker             1.0.1     2021-11-30 [2] CRAN (R 4.3.1) #>>  usethis              * 2.2.2     2023-07-06 [2] CRAN (R 4.3.1) #>>  utf8                   1.2.3     2023-01-31 [2] CRAN (R 4.3.1) #>>  VariantAnnotation      1.46.0    2023-04-25 [2] Bioconductor #>>  vctrs                  0.6.3     2023-06-14 [2] CRAN (R 4.3.1) #>>  viridis                0.6.4     2023-07-22 [2] CRAN (R 4.3.1) #>>  viridisLite            0.4.2     2023-05-02 [2] CRAN (R 4.3.1) #>>  vroom                  1.6.3     2023-04-28 [2] CRAN (R 4.3.1) #>>  withr                  2.5.0     2022-03-03 [2] CRAN (R 4.3.1) #>>  xfun                   0.40      2023-08-09 [2] CRAN (R 4.3.1) #>>  XML                    3.99-0.14 2023-03-19 [2] CRAN (R 4.3.1) #>>  xml2                   1.3.5     2023-07-06 [2] CRAN (R 4.3.1) #>>  xtable                 1.8-4     2019-04-21 [2] CRAN (R 4.3.1) #>>  XVector              * 0.40.0    2023-04-25 [2] Bioconductor #>>  yaml                   2.3.7     2023-01-23 [2] CRAN (R 4.3.1) #>>  yulab.utils            0.0.9     2023-09-01 [2] CRAN (R 4.3.1) #>>  zlibbioc               1.46.0    2023-04-25 [2] Bioconductor #>>  #>>  [1] /tmp/RtmpTfgQag/temp_libpath1b902266d9eb #>>  [2] /home/cunnac/R/x86_64-pc-linux-gnu-library/4.3 #>>  [3] /usr/local/lib/R/site-library #>>  [4] /usr/lib/R/site-library #>>  [5] /usr/lib/R/library #>>  #>> ──────────────────────────────────────────────────────────────────────────────"},{"path":"https://scunnac.github.io/tantale/dev/articles/p1_distalr.html","id":"parse-annotale-output-rvd-aa-dna-domain-type-array-id-in-a-telltale-output-dir","dir":"Articles","previous_headings":"","what":"Parse annotale output (rvd, aa, dna, domain type, array id) in a tellTale output dir","title":"A comparison between `runDistal` and `distalr` implementations","text":"","code":"taleParts <- getTaleParts(system.file(\"extdata\", \"tellTaleExampleOutput\", package = \"tantale\", mustWork = T))"},{"path":"https://scunnac.github.io/tantale/dev/articles/p1_distalr.html","id":"run-distalr-to-investigate-tale-protein-domains-composition-relatedness","dir":"Articles","previous_headings":"Parse annotale output (rvd, aa, dna, domain type, array id) in a tellTale output dir","what":"Run distalr to investigate TALE protein domains composition relatedness","title":"A comparison between `runDistal` and `distalr` implementations","text":"","code":"dres <- distalr(taleParts = taleParts, repeats.cluster.h.cut = 10, ncores = 6,                 pairwiseAlnMethod = \"Biostrings\")  # dres2 <- distalr(taleParts = taleParts, repeats.cluster.h.cut = 10, ncores = 6, #                 pairwiseAlnMethod = \"mmseq2\", condaBinPath = \"/home/cunnac/bin/miniconda3/condabin/conda\")  dres3 <- distalr(taleParts = taleParts, repeats.cluster.h.cut = 10, ncores = 6,                 pairwiseAlnMethod = \"DECIPHER\")"},{"path":"https://scunnac.github.io/tantale/dev/articles/p2_multiple_alignments.html","id":"producing-simple-tale-sequence-multiple-algnments","dir":"Articles","previous_headings":"","what":"Producing simple TALE sequence multiple algnments","title":"TALEs domains sequences alignment with MAFFT","text":"start RVD sequences African Xoo TALE TalA: output shown simple matrix : Now, evolutionarily relevant look Distal parts/domain/repeat (used somehow interchangeably roughly meaning) code sequences. Needless say obtain TALE parts code sequences, need beforehand run either original Distal perl script runDistal R implementation distalr DNA sequences. cas just use toy example provided tantale. NOTE, difference sep parameter value. output shown simple matrix :","code":"aln <- buildRepeatMsa(inputSeqs = system.file(\"extdata\", \"TalA_RVDSeqs_AnnoTALE.fasta\",                                               package = \"tantale\", mustWork = TRUE),                       sep = \"-\",                       distalRepeatSims = NULL,                       mafftOpts = \"--localpair --maxiterate 1000 --quiet --reorder --op 0 --ep 5 --thread 1\",                       gapSymbol = \"-\") knitr::kable(aln) aln <- buildRepeatMsa(inputSeqs = system.file(\"extdata\", \"small_Out_CodedRepeats.fa\",                                               package = \"tantale\", mustWork = TRUE),                       sep = \" \",                       distalRepeatSims = NULL,                       mafftOpts = \"--localpair --maxiterate 1000 --quiet --reorder --op 0 --ep 5 --thread 1\",                       gapSymbol = \"-\") knitr::kable(aln)"},{"path":"https://scunnac.github.io/tantale/dev/articles/p2_multiple_alignments.html","id":"a-detailled-illustration-of-one-of-the-tale-msa-plotting-functions","dir":"Articles","previous_headings":"","what":"A detailled illustration of one of the TALE msa plotting functions","title":"TALEs domains sequences alignment with MAFFT","text":"First get necessary info object previous run: get provide arguments:  returned object can modified : Plotting original alignment  Now can modify color scales replot check want.  can extract tree part object.  can recombine :  Pay attention arguments provided plotting function. various calls ggplotTalesMsa, arguments gradually removed exemplify type alignments thus displayed.","code":"distalrOut <- readRDS(file = system.file(\"extdata\", \"sampleDistalrOutput.rds\",                                               package = \"tantale\", mustWork = TRUE)) repeatMsaByGroup <- readRDS(file = system.file(\"extdata\", \"sampleRepeatMsaByGroup.rds\",                                               package = \"tantale\", mustWork = TRUE))  repeatAlign <- repeatMsaByGroup[[4]] rvdAlign <- convertRepeat2RvdAlign(repeatAlign = repeatAlign,                                    repeat2RvdMapping = getRepeat2RvdMappingFromDistalr(distalrOut$taleParts)) p1 <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) #>> Registered S3 methods overwritten by 'treeio': #>>   method              from     #>>   MRCA.phylo          tidytree #>>   MRCA.treedata       tidytree #>>   Nnode.treedata      tidytree #>>   Ntip.treedata       tidytree #>>   ancestor.phylo      tidytree #>>   ancestor.treedata   tidytree #>>   child.phylo         tidytree #>>   child.treedata      tidytree #>>   full_join.phylo     tidytree #>>   full_join.treedata  tidytree #>>   groupClade.phylo    tidytree #>>   groupClade.treedata tidytree #>>   groupOTU.phylo      tidytree #>>   groupOTU.treedata   tidytree #>>   inner_join.phylo    tidytree #>>   inner_join.treedata tidytree #>>   is.rooted.treedata  tidytree #>>   nodeid.phylo        tidytree #>>   nodeid.treedata     tidytree #>>   nodelab.phylo       tidytree #>>   nodelab.treedata    tidytree #>>   offspring.phylo     tidytree #>>   offspring.treedata  tidytree #>>   parent.phylo        tidytree #>>   parent.treedata     tidytree #>>   root.treedata       tidytree #>>   rootnode.phylo      tidytree #>>   sibling.phylo       tidytree class(p1) #>> [1] \"aplot\" str(p1$plotlist, max.level = 1) #>> List of 2 #>>  $ :List of 9 #>>   ..- attr(*, \"class\")= chr [1:2] \"gg\" \"ggplot\" #>>  $ :List of 9 #>>   ..- attr(*, \"class\")= chr [1:3] \"ggtree\" \"gg\" \"ggplot\" p1$plotlist[[1]] cat(\"modifying the original alignment as a ggplot\") #>> modifying the original alignment as a ggplot p2 <- p1$plotlist[[1]] + ggplot2::scale_fill_viridis_c() + ggplot2::scale_color_discrete() #>> Scale for fill is already present. #>> Adding another scale for fill, which will replace the existing scale. #>> Scale for colour is already present. #>> Adding another scale for colour, which will replace the existing scale. p2 p1$plotlist[[2]] p1$plotlist[[1]] <- p2 p1 p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatClust\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = NULL,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatClust\" # \"repeatClust\" ) # fillType has no effect p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = NULL,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = NULL,                talsim = distalrOut$tal.similarity,                repeatSim = NULL,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = distalrOut$tal.similarity,                repeatSim = NULL,                rvdAlign = NULL,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = NULL,                talsim = NULL,                repeatSim = NULL,                rvdAlign = rvdAlign,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign,                talsim = NULL,                repeatSim = NULL,                rvdAlign = NULL,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) # Single sequence align p <- ggplotTalesMsa(repeatAlign = repeatAlign[3, , drop = FALSE],                talsim = distalrOut$tal.similarity,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = rvdAlign[3, , drop = FALSE],                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign[3, , drop = FALSE],                talsim = NULL,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = rvdAlign[3, , drop = FALSE],                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatClust\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign[3, , drop = FALSE],                talsim = NULL,                repeatSim = distalrOut$repeat.similarity,                rvdAlign = NULL,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = repeatAlign[3, , drop = FALSE],                talsim = NULL,                repeatSim = NULL,                rvdAlign = NULL,                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" ) p <- ggplotTalesMsa(repeatAlign = NULL,                talsim = NULL,                repeatSim = NULL,                rvdAlign = rvdAlign[3, , drop = FALSE],                repeat.clust.h.cut = 90,                refgrep = NULL,                consensusSeq = FALSE,                fillType = \"repeatSim\" # \"repeatClust\" )"},{"path":"https://scunnac.github.io/tantale/dev/articles/p2_multiple_alignments.html","id":"a-couple-of-utility-functions-for-tale-msa","dir":"Articles","previous_headings":"","what":"A couple of utility functions for TALE msa","title":"TALEs domains sequences alignment with MAFFT","text":"Compute consensus columns TALE alignment: Figure elements TALE alignment corresponds consensus:","code":"taleAlignConsensus(repeatAlign) #>>  [1] \"186\" \"62\"  \"48\"  \"133\" \"127\" \"155\" \"73\"  \"149\" \"157\" \"152\" \"51\"  \"118\" #>> [13] \"95\"  \"178\" \"94\"  \"57\"  \"64\"  \"177\" \"115\" \"26\"  \"26\"  \"37\"  \"50\"  \"64\"  #>> [25] \"94\"  \"26\"  \"49\"  \"245\" taleAlignConsensus(rvdAlign) #>>  [1] \"NTERM\" \"NN\"    \"ND\"    \"NN\"    \"NI\"    \"NK\"    \"NN\"    \"HD\"    \"NN\"    #>> [10] \"NG\"    \"NG\"    \"N*\"    \"HD\"    \"N*\"    \"HD\"    \"NI\"    \"NN\"    \"HD\"    #>> [19] \"NG\"    \"HD\"    \"HD\"    \"HD\"    \"NG\"    \"NN\"    \"HD\"    \"HD\"    \"NG\"    #>> [28] \"CTERM\" matchConsensus(repeatAlign) #>> # A tibble: 84 × 3 #>>    arrayID            positionInArray matchConsensus #>>    <fct>                        <int> <chr>          #>>  1 BAI3-1-1_ROI_00003               1 TRUE           #>>  2 BAI3_ROI_00004                   1 FALSE          #>>  3 MAI1_ROI_00004                   1 FALSE          #>>  4 BAI3-1-1_ROI_00003               2 TRUE           #>>  5 BAI3_ROI_00004                   2 TRUE           #>>  6 MAI1_ROI_00004                   2 FALSE          #>>  7 BAI3-1-1_ROI_00003               3 TRUE           #>>  8 BAI3_ROI_00004                   3 TRUE           #>>  9 MAI1_ROI_00004                   3 TRUE           #>> 10 BAI3-1-1_ROI_00003               4 TRUE           #>> # ℹ 74 more rows matchConsensus(repeatAlign, returnLong},{"path":"https://scunnac.github.io/tantale/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bao Tram Vi. Author. Sebastien Cunnac. Author, maintainer.","code":""},{"path":"https://scunnac.github.io/tantale/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vi BT, Cunnac S (2023). tantale: Transcription Activator-Like Effectors (TALEs) tools. https://scunnac.github.io/tantale, https://github.com/scunnac/tantale.","code":"@Manual{,   title = {tantale: Transcription Activator-Like Effectors (TALEs) tools},   author = {Bao Tram Vi and Sebastien Cunnac},   year = {2023},   note = {https://scunnac.github.io/tantale, https://github.com/scunnac/tantale}, }"},{"path":"https://scunnac.github.io/tantale/dev/index.html","id":"an-integrated-collection-of-functions-for-tale-minning-and-analysis-with-the-r-language","dir":"","previous_headings":"","what":"An integrated collection of functions for TALE minning and analysis with the R language","title":"Transcription Activator-Like Effectors (TALEs) tools","text":"many concurrent complementary tools running different platforms (java, perl), analyzing TALEs (mostly Xanthomonas) genomes can turn nightmarish experience. Furthermore, making sense output difficult easy way graphically represent various objects analysis. tantale, compiled extended previous code wrapping TALE analysis tools integrated R interface provides extensive list utilities easy plotting. enables moderately proficient R programmer perform entire analysis pipelines directly R access result objects custom manipulations. snapshot topics (hopefully) covered future: TALE class associated methods (done) Wrapper around AnnoTALE correcTALE tellTale, R function similar AnnoTALE Analysis tools RVD inventory, repeat lenght Wrappers around DisTAL, FuncTAL, AnnoTALE TALE groups inference Easily build Multiple alignments generate nice plots Wrappers around target predictors (Talvez PrediTALE) General parser results aggregation Connector daTALbase (done) NOTE : details, please, take look package page Install via remotes package still work progress necessarily fully properly implemented!!! Documentation improved extended. feel like contributing, great, please send email: sebastien.cunnac@ird.fr tantale written Linux systems mind likely work OS (eg Windows) tantale wrappers use code written languages. work, must ideally Java Perl PATH system. Conda Mamba must installed well. Perl scripts (DisTAL et al.) used tantale require number perl libraries. Upon experimenting bit realized convenient include libraries tantale. consequence files cause tantale occupy quite disk space…","code":"remotes::install_github(\"scunnac/tantale\",                           type = \"source\",                           dependencies = TRUE,                           upgrade = \"never\"                           )"},{"path":"https://scunnac.github.io/tantale/dev/reference/analyzeAnnoTALE.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs the ","title":"Runs the ","text":"R wrapper around AnnoTALE 'AnnoTALE.jar predict' 'AnnoTALE.jar analyze' shell calls. whole AnnoTALE workflow can completed subsequent call buildAnnoTALE function.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/analyzeAnnoTALE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs the ","text":"","code":"analyzeAnnoTALE(   inputFastaFile,   outputDir = getwd(),   prefix = NULL,   annoTALE = system.file(\"tools\", \"AnnoTALEcli-1.5.jar\", package = \"tantale\", mustWork =     T) )"},{"path":"https://scunnac.github.io/tantale/dev/reference/analyzeAnnoTALE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs the ","text":"inputFastaFile Path fasta file containing DNA (?) sequences analyzed TALE content. outputDir Directory output written (created exist). prefix scalar character vector containing prefix appended TALE names AnnoTALE. supplied, function try guess prefix input file name. annoTALE Path AnnoTALE jar file want use another version one provided tantale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/analyzeAnnoTALE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs the ","text":"Returns invisibly edit code shell call last   AnnoTALE step (ie '0' successful).","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/annout-class.html","id":null,"dir":"Reference","previous_headings":"","what":"annotale output — annout-class","title":"annotale output — annout-class","text":"annotale output","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildAnnoTALE.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ","title":"Run the ","text":"R wrapper around AnnoTALE 'AnnoTALE.jar build' program. usually takes input file generated analyzeAnnoTALE function.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildAnnoTALE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ","text":"","code":"buildAnnoTALE(   TALESeqsFastaFile,   outputDir = getwd(),   annoTALE = system.file(\"tools\", \"AnnoTALEcli-1.5.jar\", package = \"tantale\", mustWork =     T) )"},{"path":"https://scunnac.github.io/tantale/dev/reference/buildAnnoTALE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the ","text":"TALESeqsFastaFile Path fasta file containing TALE sequences returned AnnoTALE (?) classified groups. outputDir Directory output written (created exist). annoTALE Path AnnoTALE jar file want use another version one provided tantale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildAnnoTALE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the ","text":"Returns invisibly exit code shell call Annotale (ie '0' successful).","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildDisTalGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Alvaro's Perl scripts for TALEs grouping — buildDisTalGroups","title":"Run Alvaro's Perl scripts for TALEs grouping — buildDisTalGroups","text":"take distal output classify groups","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildDisTalGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Alvaro's Perl scripts for TALEs grouping — buildDisTalGroups","text":"","code":"buildDisTalGroups(path, num.groups, overwrite = F)"},{"path":"https://scunnac.github.io/tantale/dev/reference/buildDisTalGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Alvaro's Perl scripts for TALEs grouping — buildDisTalGroups","text":"path directory containing DisTal output files, object output outdir runDistal num.groups integer indicating number TALEs groups want classify. overwrite logical indicating whether rerun Perl scripts load existing results.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildDisTalGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Alvaro's Perl scripts for TALEs grouping — buildDisTalGroups","text":"list containing: SeqOfRvdAlignments: list matrices TALES alignment RVD sequences SeqOfDistancesAlignments: list matrices TALEs alignment repeat distance repeatUnitsDistanceMatrix:  matrix pairwise similarity scores repeats SeqOfRepsAlignments: list matrices TALEs alignment repeat codes TALgroups: data frame TALEs names groups","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildRepeatMsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform multiple alignment of TALE repeat or RVD sequences — buildRepeatMsa","title":"Perform multiple alignment of TALE repeat or RVD sequences — buildRepeatMsa","text":"Perform multiple alignment TALE repeat RVD sequences using --text mode MAFFT Multiple alignment program. default, uses simple scoring matrix defined text mode MAFFT. Users can optionally provide custom scoring matrix.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildRepeatMsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform multiple alignment of TALE repeat or RVD sequences — buildRepeatMsa","text":"","code":"buildRepeatMsa(   inputSeqs,   sep = \" \",   distalRepeatSims = NULL,   mafftOpts = \"--localpair --maxiterate 1000 --reorder --op 0 --ep 5 --thread 1\",   mafftPath = system.file(\"tools\", \"mafft-linux64\", package = \"tantale\", mustWork = TRUE),   gapSymbol = NA )"},{"path":"https://scunnac.github.io/tantale/dev/reference/buildRepeatMsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform multiple alignment of TALE repeat or RVD sequences — buildRepeatMsa","text":"inputSeqs object accepted input toListOfSplitedStr function, path fasta file containing TALE sequences aligned coded.repeats.str slot object returned runDistal function. Can also return value taleParts2RvdStringSet function one wants align RVD sequences. sep Passed toListOfSplitedStr() split TALEs strings input. distalRepeatSims long, three columns data frame pairwise similarity scores repeats available repeat.similarity slot object returned runDistal function. mafftOpts character string containing additional options MAFFT command. notably useful tweak Gap opening gap extension penalties. mafftPath Path MAFFT installation directory. default uses MAFFT version included tantale. gapSymbol Specify alternative symbol gaps alignments.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/buildRepeatMsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform multiple alignment of TALE repeat or RVD sequences — buildRepeatMsa","text":"character matrix representing multiple alignment.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/convertRepeat2RvdAlign.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute Distal repeat IDs for RVDs in a TALE alignment matrix. — convertRepeat2RvdAlign","title":"Substitute Distal repeat IDs for RVDs in a TALE alignment matrix. — convertRepeat2RvdAlign","text":"Substitute Distal repeat IDs RVDs TALE alignment matrix.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/convertRepeat2RvdAlign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute Distal repeat IDs for RVDs in a TALE alignment matrix. — convertRepeat2RvdAlign","text":"","code":"convertRepeat2RvdAlign(repeatAlign, repeat2RvdMapping)"},{"path":"https://scunnac.github.io/tantale/dev/reference/convertRepeat2RvdAlign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute Distal repeat IDs for RVDs in a TALE alignment matrix. — convertRepeat2RvdAlign","text":"repeatAlign multiple TALE repeat sequences alignment form matrix returned buildRepeatMsa  SeqOfRepsAlignments element return object buildDisTalGroups function. repeat2RvdMapping return value getRepeat2RvdMapping function  getRepeat2RvdMappingFromDistalr function used distalr function.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/convertRepeat2RvdAlign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitute Distal repeat IDs for RVDs in a TALE alignment matrix. — convertRepeat2RvdAlign","text":"TALE alignment matrix made RVD sequences.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/correcTales.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct TALE ORFs in error-prone sequences — correcTales","title":"Correct TALE ORFs in error-prone sequences — correcTales","text":"way faster alternative run tellTale correction mode error prone sequences ONT assembled genomes, provide wrapper around java binaries gitHub page. takes input fasta file output file corrected indels TALE coding sequences using approach described Erkes et al. paper. tellTale can subsequently run corrected sequences correction mode.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/correcTales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct TALE ORFs in error-prone sequences — correcTales","text":"","code":"correcTales(   uncorrectedAssemblyPath,   correctedAssemblyPath = file.path(getwd(), \"correctedTALEs.fa\"),   pathToHMMs = system.file(\"tools\", \"talecorrect\", \"HMMs\", \"Xoo\", package = \"tantale\",     mustWork = T),   returnCorrectionsTble = FALSE,   condaBinPath = \"auto\" )"},{"path":"https://scunnac.github.io/tantale/dev/reference/correcTales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct TALE ORFs in error-prone sequences — correcTales","text":"uncorrectedAssemblyPath Path input sequence file correctedAssemblyPath Path ouput file pathToHMMs Path folder containning profile HMM files. default value points ones build Xanthomonas oryzae pv. oryzae templates. Xox ones also available parent directory. Please see gitHub page instructions building custom profiles. returnCorrectionsTble Specify TRUE want list executed operations sequence tibble. condaBinPath Path Conda binary file need specify path different one automatically searched reticulate package functions. tellTaleOutDir Path tellTale run output directory","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/correcTales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct TALE ORFs in error-prone sequences — correcTales","text":"tibble returnCorrectionsTble TRUE path corrected sequences file.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/diagnoseTaleParts.html","id":null,"dir":"Reference","previous_headings":"","what":"Report on potential 'pseudo TALEs' in a taleParts object — diagnoseTaleParts","title":"Report on potential 'pseudo TALEs' in a taleParts object — diagnoseTaleParts","text":"TESTED!!!! displays compact information rich view TALEs stored taleParts object.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/diagnoseTaleParts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report on potential 'pseudo TALEs' in a taleParts object — diagnoseTaleParts","text":"","code":"diagnoseTaleParts(taleParts, sanitize = FALSE)"},{"path":"https://scunnac.github.io/tantale/dev/reference/diagnoseTaleParts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report on potential 'pseudo TALEs' in a taleParts object — diagnoseTaleParts","text":"taleParts table TALE parts returned getTaleParts function distalr sanitize FALSE, return arrays least one  part missing sequence. TRUE, return arrays part missing sequence.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/diagnoseTaleParts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report on potential 'pseudo TALEs' in a taleParts object — diagnoseTaleParts","text":"taleParts object","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/distalr.html","id":null,"dir":"Reference","previous_headings":"","what":"Emulate DisTal in R — distalr","title":"Emulate DisTal in R — distalr","text":"meant approximate results DisTal R similar runDistal. still uses Arlem binary just like DisTal performs rest operations R support parallelization. Depending pairwiseAlnMethod parameter value  much faster orginial Perl code returns similar results. Please take look vignette tips use properly.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/distalr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emulate DisTal in R — distalr","text":"","code":"distalr(   taleParts,   repeats.cluster.h.cut = 10,   ncores = 1,   pairwiseAlnMethod = \"DECIPHER\",   condaBinPath = \"auto\" )"},{"path":"https://scunnac.github.io/tantale/dev/reference/distalr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emulate DisTal in R — distalr","text":"taleParts table TALE parts returned getTaleParts function. repeats.cluster.h.cut numeric value cut hierarchical clustering tree repeat. pairwiseAlnMethod Specify underlying approach computing pairwise similarities TALE parts amino acid sequences. Must \"Biostrings\", \"mmseq2\" \"DECIPHER\" condaBinPath Path Conda binary file need specify path different one automatically searched reticulate package functions.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/distalr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Emulate DisTal in R — distalr","text":"list DisTal output components: taleParts: original input tibble 'domCode' column corresponding unique distal    'code' label attached unique domain sequence. Thus parts sequence    'domCode'. repeats.code: data frame unique repeat AA sequences numeric codes coded.repeats.str: list repeat-coded TALE strings repeat.similarity:  long, three columns data frame pairwise similarity scores repeats tal.similarity: three columns Tals similarity table pairwise similarity scores TALEs repeats.cluster: data frame containing repeat code repeat clusters.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","text":"Uses Distal repeat sequences RVD sequences set TALEs return association repeat ID RVD.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","text":"","code":"getRepeat2RvdMapping(talesRepeatVectors, talesRvdVectors)"},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","text":"talesRepeatVectors Expects list Distal RVDs character vectors. named element corresponding TALE.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","text":"two columns repeatID - RVD data frame.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMapping","text":"Care must taken TALEs two sets sequences name. addition, function tries hard make sure two sets sequences identical every ways individual 'values' contain. therefore notably important make sure sequences consistent whether include N-term C-term domains IDs/Tags .","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMappingFromDistalr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMappingFromDistalr","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMappingFromDistalr","text":"Uses Distal repeat sequences RVD sequences set TALEs  analyzed distalr function return association repeat ID RVD.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMappingFromDistalr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMappingFromDistalr","text":"","code":"getRepeat2RvdMappingFromDistalr(distalrTaleParts)"},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMappingFromDistalr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMappingFromDistalr","text":"distalrTaleParts taleParts object distalr output.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getRepeat2RvdMappingFromDistalr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a mapping between Distal repeat IDs and their cognate RVD. — getRepeat2RvdMappingFromDistalr","text":"two columns repeatID - RVD data frame.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getTaleParts.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Annotale parts from a tellTale output directory. — getTaleParts","title":"Fetch Annotale parts from a tellTale output directory. — getTaleParts","text":"function get sequences tellTale \"rvdSequences.fas\" AnnoTALE \"TALE_Protein_parts.fasta\" \"TALE_DNA_parts.fasta\" files SINGLE tellTale run output directory returns tibble. row describes domain tale array includes 'arrayID', id sequence array found, 'domainType' (type domain, repeat, N-term C-term), position domain inside array, DNA corresponding domain RVD amino acid sequences relevant. **IMPORTANT**: telltale MUST run appendExtremityCodes = TRUE","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getTaleParts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Annotale parts from a tellTale output directory. — getTaleParts","text":"","code":"getTaleParts(tellTaleOutDir)"},{"path":"https://scunnac.github.io/tantale/dev/reference/getTaleParts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Annotale parts from a tellTale output directory. — getTaleParts","text":"tellTaleOutDir Path tellTale run output directory","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/getTaleParts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Annotale parts from a tellTale output directory. — getTaleParts","text":"tibble.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/ggplotTalesMsa.html","id":null,"dir":"Reference","previous_headings":"","what":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","title":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","text":"Plot TALEs msa ggplot2 framework.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/ggplotTalesMsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","text":"","code":"ggplotTalesMsa(   repeatAlign,   talsim = NULL,   rvdAlign = NULL,   repeatSim = NULL,   repeat.clust.h.cut = 90,   refgrep = NULL,   consensusSeq = FALSE,   fillType = \"repeatClust\" )"},{"path":"https://scunnac.github.io/tantale/dev/reference/ggplotTalesMsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","text":"repeatAlign multiple Tal repeat sequences alignment form matrix returned buildRepeatMsa one elements SeqOfRepsAlignments slot return object buildDisTalGroups function. talsim three columns Tals similarity table obtained runDistal 'tal.similarity' slot returned object. rvdAlign multiple Tal RVD sequences alignment form matrix returned convertRepeat2RvdAlign,   buildRepeatMsa  one elements SeqOfRepsAlignments slot return object buildDisTalGroups function. repeatSim long, three columns data frame pairwise similarity scores repeats available repeat.similarity slot object returned runDistal  distalr functions. repeat.clust.h.cut height tree cutting defining domain/repeat clusters. refgrep Regular expression pattern used search TALE names select reference alignment. consensusSeq (logical) Whether display consensus sequence **IMPLEMENTED YET** fillType Either \"repeatClust\" \"repeatSim\". options possible necessary information (least repeatSim value), argument decide type 'box color filling' employed either based cluster repeat falls clustering repeat alignment based amino acid similarity repeat position repeat 'reference' TALE position.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/ggplotTalesMsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","text":"aplot object.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/ggplotTalesMsa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'Nice' plotting a multiple alignment of TALE sequences — ggplotTalesMsa","text":"function similar purpose heatmap_msa implemented ggplot. versatile (takes single row matrices alignment) bit slower. type plot get depend provided information form parameter values See tantale website detailed usage cases. mandatory argument either repeatAlign rvdAlign. plot printed returned modifications necessary.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/groupTales.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouping TALEs — groupTales","title":"Grouping TALEs — groupTales","text":"Classifying Tal groups hierchical clustering k-medoids clustering based similarity.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/groupTales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouping TALEs — groupTales","text":"","code":"groupTales(   taleSim,   plotTree = FALSE,   k = NULL,   k_test = NULL,   method = \"k-medoids\" )"},{"path":"https://scunnac.github.io/tantale/dev/reference/groupTales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouping TALEs — groupTales","text":"taleSim three columns Tals similarity table obtained runDistal 'tal.similarity' slot returned object. plotTree logical indicating whether plot hclust tree . method \"k-medoids\", tree plotted (instead, plot silhoutte value). k integer indicating number groups want Tals classified. case method \"k-medoids\", k = \"auto\" automatically pick optimum k k = NULL interactively pick . always trust automatic picking, better choose k interactively test different values. k_test integer vector 2 indicating range k test, available method = \"k-medoids\". Note minimum value k 2. method one two methods: \"hclust\" (see cutree) \"k-medoids\" (see pam).","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/groupTales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grouping TALEs — groupTales","text":"data frame containing name tals taleSim classified groups.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_msa.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting a multiple alignment of TALE sequences — heatmap_msa","title":"Plotting a multiple alignment of TALE sequences — heatmap_msa","text":"Plot frame heatmap.2 Tals alignment.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_msa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting a multiple alignment of TALE sequences — heatmap_msa","text":"","code":"heatmap_msa(   talsim,   repeatAlign,   rvdAlign = NULL,   repeatSim,   repeat.clust.h.cut = 90,   refgrep = NULL,   consensusSeq = FALSE,   noteColSet = NULL,   plot.type,   save.path,   ... )"},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_msa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting a multiple alignment of TALE sequences — heatmap_msa","text":"talsim three columns Tals similarity table obtained runDistal 'tal.similarity' slot returned object. repeatAlign multiple Tal repeat sequences alignment form matrix returned buildRepeatMsa one elements SeqOfRepsAlignments slot return object buildDisTalGroups function. rvdAlign (optional) rvds need labeled plot (plot.type = \"repeat.similarity\" \"repeat.clusters..rvd\", multiple Tal repeat sequences alignment form matrix returned buildRepeatMsa one elements SeqOfRepsAlignments slot return object buildDisTalGroups function. repeatSim long, three columns data frame pairwise similarity  scores repeats available repeat.similarity slot object returned runDistal function. (CORRECT???!!!) repeat.clust.h.cut height tree cutting plot type \"repeat.clusters\". refgrep regular expression pattern used search Tal names select reference alignment. consensusSeq (logical) whether display consensus sequence  plot type \"repeat.clusters..rvd\". noteColSet case rvdSim = NULL, vector 2 colors rvd alignment, first color matched rvds, second color mismatched ones. case, colors supplied. plot.type Either \"repeat.similarity\", \"repeat.clusters\" , \"repeat.clusters..rvd\". Defines type plot produced  function. See details. save.path file path save plot. save.path NULL, heatmap  printed. save.path specified, image file created format based file extension. ... arguments heatmap.2","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_msa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting a multiple alignment of TALE sequences — heatmap_msa","text":"return value heatmap.2","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_msa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting a multiple alignment of TALE sequences — heatmap_msa","text":"\"repeat.similarity\" plot shows RVD alignment Tals, hierarchical dendrogram  reflecting overall similarities TALEs, similarity repeats alignment color    cells, (rvdSim provided) similarity RVDs alignment     color RVD labels. \"repeat.clusters\" plot shows repeat alignment Tals cells filled colors representing  repeat clustering group hierarchical dendrogram reflecting overall similarities  TALEs. \"repeat.clusters..rvd\" plots repeat alignment Tals rvd labeled.  plotting outputs buildDistalGroups,  supply repeatClustID/Similarity alignment forMatrix,  talsim, forCellNote - repeat/rvd alignment, refgrep optionally. alignments, can provide repeat alignment  forMatrix repeatSim, repeat similarity data frame,  function convert repeatClustID/Similarity alignment depending  plot type. case repeat.clusters, may want adjust  param repeat.clust.h.cut decrease/increase number repeat clusters.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_talomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap plotting of rvd sequence variants — heatmap_talomes","title":"Heatmap plotting of rvd sequence variants — heatmap_talomes","text":"function creates graphical presentation tale annotation table. output like heatmap presents rvd sequence variants Tal groups column respective strains rows (vice versa). different typical heatmap can display one value cell; example, one strain 2 rvd sequence variants belong 1 group, displayed 2 colors 1 cell.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_talomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap plotting of rvd sequence variants — heatmap_talomes","text":"","code":"heatmap_talomes(   tale_annotation,   col,   row,   value,   truncTaleLab = NULL,   extraCol = NULL,   x.lab = \"TALE Group\",   y.lab = \"Strain\",   title = \"RVD sequences variants\",   plot.type = \"all\",   mapcol = viridis::viridis(10),   mar.side = c(5, 5, 3, 3),   sepwid = 5,   sepcol = \"white\",   inner_sepcol = \"white\",   save.path = NULL )"},{"path":"https://scunnac.github.io/tantale/dev/reference/heatmap_talomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap plotting of rvd sequence variants — heatmap_talomes","text":"tale_annotation data frame containing least 3 columns Tal groups, strain names, rvd seqs, 1 row 1 Tal. col \"character\", column name tale_annotation displayed rows heatmap (e.g. tal groups). row \"character\", column name tale_annotation displayed columns heatmap (e.g. strain names). value \"character\", column name rvdseqs tale_annotation truncTaleLab (optional, default = NULL) \"character\", column name tale_annotation labeling truncTales TRUE/FALSE value. truncTales labeled \"T\" heatmap cells, argument called. extraCol (optional, default = NULL) \"character\", column name tale_annotation containing information (e.g. origin). presented side bar right heatmap. x.lab, y.lab, title character x axix, y axis names title mapcol character vector colors cells. mar.side margin heatmap row dendrogram, col dendrogram, rownames, colnames, respectively. (default, c(5, 5, 3, 3)). sepwid numeric value width separator adjacent cells. sepcol character color separator adjacent cells inner_sepcol character color separator colors within 1 cell 1. save.path (optional) file path save plot, format image depends file extension. save.path NULL, heatmap printed. save.path specified, image file created.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/matchConsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Do elements in a TALE msa match the consensus? — matchConsensus","title":"Do elements in a TALE msa match the consensus? — matchConsensus","text":"Compute logical matrix corresponding input align input TRUE element match consensus element position FALSE otherwise.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/matchConsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do elements in a TALE msa match the consensus? — matchConsensus","text":"","code":"matchConsensus(align, returnLong = TRUE)"},{"path":"https://scunnac.github.io/tantale/dev/reference/matchConsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do elements in a TALE msa match the consensus? — matchConsensus","text":"align multiple Tal sequences alignment form matrix.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/matchConsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do elements in a TALE msa match the consensus? — matchConsensus","text":"multiple Tal sequences alignment form   matrix filled logical values  FALSE   long tibble representing original alignment otherwise (default).","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleComposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize TALE content in a taleParts object — plotTaleComposition","title":"Visualize TALE content in a taleParts object — plotTaleComposition","text":"TESTED!!!! displays compact information rich view TALEs stored taleParts object.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleComposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize TALE content in a taleParts object — plotTaleComposition","text":"","code":"plotTaleComposition(taleParts)"},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleComposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize TALE content in a taleParts object — plotTaleComposition","text":"taleParts table TALE parts returned getTaleParts function distalr","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleComposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize TALE content in a taleParts object — plotTaleComposition","text":"ggplot object","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleTargetPred.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","title":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","text":"function enable visual inspection TALE target predictions results located within specified subject DNA sequence region","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleTargetPred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","text":"","code":"plotTaleTargetPred(predResults, subjDnaSeqFile, filterRange)"},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleTargetPred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","text":"predResults tibble prediction results obtained preditale talvez custom table format. subjDnaSeqFile fasta file subject DNA sequences used predict DNA binding elements. filterRange length one genomic ranges form properly formatted character string (eg. \"chr2:56-125\") atomic GenomicRanges object. argument specify DNA region plotted together predicted binding TALEs RVD sequences whose predicted EBE lies entirely whithin.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleTargetPred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","text":"Returns ggplot object can altered using ggplot2 package functions.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/plotTaleTargetPred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot TALE RVD sequences along a potential DNA target region — plotTaleTargetPred","text":"RVDs sequences predicted target EBE sense strand DNA sequence plotted top double stranded DNA sequence parallel cognate EBE highlighted corresponding strand DNA sequence. preicted target EBE opposite strand displayed . Individual RVDs printed inside colored boxes. color boxes indicate degree RVD predicted affinity corresponding nucleotide DNA sequence position relatively nucleotides. RVDs labelled \"OO\" correspond first non-canonical repeat also called repeat zero TALE protein squences. Numeric values inside boxes located immediately right TALE labels reflect prediction scores.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/preditale.html","id":null,"dir":"Reference","previous_headings":"","what":"Run TALE target predictions on DNA sequence(s) using PrediTale. — preditale","title":"Run TALE target predictions on DNA sequence(s) using PrediTale. — preditale","text":"R wrapper around PrediTale 'PrediTALE.jar preditale' module. Takes list TALE RVD sequences fasta file DNA sequences runs PrediTale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/preditale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run TALE target predictions on DNA sequence(s) using PrediTale. — preditale","text":"","code":"preditale(   rvdSeqs,   subjDnaSeqFile,   optParam = \"\",   outDir = NULL,   predictorPath = system.file(\"tools\", \"PrediTALE.jar\", package = \"tantale\", mustWork =     T) )"},{"path":"https://scunnac.github.io/tantale/dev/reference/preditale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run TALE target predictions on DNA sequence(s) using PrediTale. — preditale","text":"rvdSeqs Tale RVD sequences supplied either fasta file (atomic character vector) Tale info (name) title sequences RVD space '-' separeted string Biostrings XStringSet sequences RVD similarly formated. See PrediTale man page encode RVDs present aberrant repeats. subjDnaSeqFile Expects character vector specifying path fasta file holding subject DNA sequence(s). optParam atomic character vector specifying optionnal parameters PrediTALE.jar preditale (eg \"Strand=\\\"forward strand\\\"\"). outDir Expects character vector specifying path output directory. supplied, output files temporary. predictorPath want use another version \"PrediTALE.jar\" one supplied tantale, specify path .","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/preditale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run TALE target predictions on DNA sequence(s) using PrediTale. — preditale","text":"tibble EBE predictions. Note column names   modified relative column names found originale   programs's output order homogenize column names across TALE target   prediction programs tantale","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/read_distal_aligns.html","id":null,"dir":"Reference","previous_headings":"","what":"read alignment results of Alvaro's Perl scripts for building TALE groups from DisTal output — read_distal_aligns","title":"read alignment results of Alvaro's Perl scripts for building TALE groups from DisTal output — read_distal_aligns","text":"read multiple files (.RVDs/.Dists/.Reps) output list whose element dataframe read file","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/read_distal_aligns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read alignment results of Alvaro's Perl scripts for building TALE groups from DisTal output — read_distal_aligns","text":"","code":"read_distal_aligns(file.lists)"},{"path":"https://scunnac.github.io/tantale/dev/reference/runDistal.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Distal tool — runDistal","title":"Run the Distal tool — runDistal","text":"Run Distal tool QueTal suite classify compare TAL effectors functionally phylogenetically.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/runDistal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Distal tool — runDistal","text":"","code":"runDistal(   fasta.file,   outdir = NULL,   treetype = \"p\",   repeats.cluster.h.cut = 10,   overwrite = F )"},{"path":"https://scunnac.github.io/tantale/dev/reference/runDistal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Distal tool — runDistal","text":"fasta.file fasta file containing TALE DNA/AA sequences. outdir directory store disTal output. repeats.cluster.h.cut numeric value cut hierachycal clustering tree repeat. overwrite logical indicating whether rerun disTal load existing results.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/runDistal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Distal tool — runDistal","text":"list DisTal output components: repeats.code: data frame unique repeat AA sequences numeric codes coded.repeats.str: list repeat-coded TALE strings repeat.similarity:  long, three columns data frame pairwise similarity scores repeats tal.similarity: three columns Tals similarity table pairwise similarity scores TALEs tree: Newick format neighbor-joining tree TALs constructed based TALEs similarity repeats.cluster: data frame containing repeat code repeat clusters.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleAlignConsensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a consensus from a TALE msa — taleAlignConsensus","title":"Compute a consensus from a TALE msa — taleAlignConsensus","text":"Pick frequent element column alignment matrix.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleAlignConsensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a consensus from a TALE msa — taleAlignConsensus","text":"","code":"taleAlignConsensus(align)"},{"path":"https://scunnac.github.io/tantale/dev/reference/taleAlignConsensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a consensus from a TALE msa — taleAlignConsensus","text":"align multiple Tal sequences alignment form matrix.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleAlignConsensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a consensus from a TALE msa — taleAlignConsensus","text":"vector consensus elements column align.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleParts2RvdStringSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","title":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","text":"Uses taleParts object distalr output return BStringSet RVD sequences. RVDs separated character specified sep parameter.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleParts2RvdStringSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","text":"","code":"taleParts2RvdStringSet(taleParts, sep = \"-\")"},{"path":"https://scunnac.github.io/tantale/dev/reference/taleParts2RvdStringSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","text":"sep Used RVD separatator distalrTaleParts taleParts object distalr output.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleParts2RvdStringSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","text":"two columns repeatID - RVD data frame.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/taleParts2RvdStringSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a RVD sequences set from a taleParts object — taleParts2RvdStringSet","text":"Uses Distal repeat sequences RVD sequences set TALEs  analyzed distalr function return association repeat ID RVD.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/talvez.html","id":null,"dir":"Reference","previous_headings":"","what":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","title":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","text":"R wrapper around Talvez predictor perl script. Takes list TALE RVD sequences fasta file DNA sequences runs Talvez","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/talvez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","text":"","code":"talvez(   rvdSeqs,   subjDnaSeqFile,   optParam = \"-t 0 -l 19\",   outDir = NULL,   talvezDir = system.file(\"tools\", \"TALVEZ_3.2\", package = \"tantale\", mustWork = T),   condaBinPath = \"auto\" )"},{"path":"https://scunnac.github.io/tantale/dev/reference/talvez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","text":"rvdSeqs Tale RVD sequences supplied either fasta file (atomic character vector) Tale info (name) title sequences RVD space '-' separeted string Biostrings XStringSet sequences RVD similarly formated. subjDnaSeqFile Expects character vector specifying path fasta file holding subject DNA sequence(s). Talvez forbids sequences file wrapped fixed width. function uses Biostrings unwrap use subject sequences longer 20kb, fail advised unwrap sequences hand. optParam atomic character vector specifying optionnal parameters Talvez script (eg \"-t 0 -l 19\"). may include '-e' '-z' options specifying matrix files. outDir Expects character vector specifying path output directory. supplied, output files temporary. talvezDir want use another version Talvez one supplied tantale, specify path directory containning necessary files . condaBinPath Path Conda binary file need specify path different one automatically searched reticulate package functions.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/talvez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","text":"tibble EBE predictions. Note column names   modified relative column names found originale   programs's output order homogenize column names across TALE target   prediction programs tantale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/talvez.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run TALE target predictions on DNA sequence(s) using Talvez — talvez","text":"Note talvez wrapper, uses RVD - Nucleotide specificity matrices used talvez, possible use custom ones. Note also talvez script run conda environment providing necessary dependencies. environment created automatically necessary.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":null,"dir":"Reference","previous_headings":"","what":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"integrated collection functions (IDEALLY): Please take look package website details.","code":""},{"path":[]},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"CAUTIONARY NOTES:  tantale written Linux systems mind     likely work OS (eg Windows) tantale wrappers use code written languages :     Java Perl must PATH system. Furthermore, Conda Mamba must installed. direction use Conda R, consult     install_miniconda() help page.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":"-a-tale-oriented-oop-framework","dir":"Reference","previous_headings":"","what":"- A TALE-oriented OOP framework","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"TALE class associated methods","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":"-tale-mining-in-bacterial-sequences","dir":"Reference","previous_headings":"","what":"- TALE mining in bacterial sequences","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"Wrapper around annoTALE correcTALE tellTale, R function similar annoTALE Analysis tools RVD inventory, repeat lenght","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":"-tales-classification-phylogeny","dir":"Reference","previous_headings":"","what":"- TALEs classification, phylogeny","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"Wrappers around distal, functal, annoTALE TALE groups inference Easily build Multiple alignments generate nice plots","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tantale.html","id":"-tale-targets-mining","dir":"Reference","previous_headings":"","what":"- TALE targets mining","title":"tantale: Transcription Activator-Like Effectors (TALEs) tools — tantale","text":"Wrappers around target predictors General parser results aggregation Connector daTALbase (done)","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","text":"tellTale primarily written report 'corrected' TALE RVD sequences indels prone, noisy DNA sequences (suboptimally polished genomes assembly, raw reads long read sequencing technologies [eg PacBio, ONT]) otherwise missed conventional tools (eg AnnoTALE).","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","text":"","code":"tellTale(   subjectFile,   outputDir = getwd(),   hmmFilesDir = system.file(\"extdata\", \"hmmProfile\", package = \"tantale\", mustWork = T),   TALE_NtermDNAHitMinScore = 300,   repeatDNAHitMinScore = 20,   TALE_CtermDNAHitMinScore = 200,   minDomainHitsPerSubjSeq = 4,   mergeHits = TRUE,   minGapWidth = 35,   appendExtremityCodes = TRUE,   rvdSep = \"-\",   hmmerpath = system.file(\"tools\", \"hmmer-3.3\", \"bin\", package = \"tantale\", mustWork = T),   extendedLength = 300,   talArrayCorrection = FALSE,   refForTalArrayCorrection = system.file(\"extdata\", \"decipher_ref_tales_aa.fa.gz\",     package = \"tantale\", mustWork = T),   frameShiftCorrection = -11,   ... )"},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","text":"subjectFile Fasta file DNA sequence(s) searched presence TALE coding sequences (CDS). outputDir Path output directory. specified, results written current working folder. hmmFilesDir Specify path folder holding hmmfiles want use ones provided tantale. TALE_NtermDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine repeatDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine TALE_CtermDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine minDomainHitsPerSubjSeq Minimum number nhmmer hits subject sequence reported TALE diagnostic regions. way simplify output little getting ride uninformative sequences mergeHits Perform overlapping hits merging per domain type. modified. minGapWidth Minimum gap base pairs two tale domain hits considered distinct. length gap value, domains considered \"contiguous\" grouped array. appendExtremityCodes Set FALSE want N- C-TREM anchor codes output sequences RVD rvdSep Symbol acting separator RVD sequences hmmerpath Specify path directory holding HMMER executable want use ones provided tantale. extendedLength number nucleotides extend 3'-end tal ORF prediction stage. talArrayCorrection True False refForTalArrayCorrection Reference AA sequences tal array predicted ORF correction want use ones provided tantale. frameShiftCorrection internal parameter CorrectFrameshifts function. default 11 fiddle risk... ... Additional parameters CorrectFrameshifts function.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","text":"functions side effects (writing files, mostly).   However, everything ran smoothly, invisibly return path   directory output files written. List output files:  allRanges.gff: gff file Tal arrays detected HMMer arrayReport.tsv: report Tal arrays. arrayReport.tsv,   column predicted_dels_count/predicted_ins_count shows   number putative deletions/insertions raw sequences   corrected corrected sequences   function CorrectFrameshifts. hitsReport.tsv: report hits detected HMMer hitsReport.gff: gff file hits detected HMMer domainsReport.tsv: report Tal amino acid domains detected AnnoTALE analyze putativeTalOrf.fasta: Tal putative ORFs pseudoTalCds.fasta: pseudo Tal CDS, putative Tal array ORFs detected HMMer whch    AnnoTALE analyze failed find RVD(s). rvdSequences.fas: Sequence RVDs (separated rvdSep) predicted encoded Tal array    ORFs AnnoTALE. Note appendExtremityCodes TRUE (default),    N- C-TREM anchor codes appended beginning end sequences    corresponding domain coding sequence wound HMMer DNA level.    HMMer hits found, \"XXXXX\" string appended    denote AA sequences outside RVD array likely atypical. C-terminusAAAlignment.html: protein alignment C-termini C-terminusDNAAlignment.html: DNA alignment C-termini N-terminusAAAlignment.html: protein alignment N-termini N-terminusDNAAlignment.html: DNA alignment N-termini TALE_CDS_all_diagnostic_regions_hmmfile.: HMMER profile used tale cds search. hmmerSearchOut.txt: ignore nhmmerHumanReadableOutputOfLastRun.txt: primary HMMER output file. tellTale.log: log file annotale folder: folder containing result AnnoTALE analyze Tal arrays CorrectionAlignmentAA folder: folder containing protein alignment Tal array detected HMMer corrected Tal array talArrayCorrection = TRUE CorrectionAlignmentDNA folder: folder containing DNA alignment Tal array detected HMMer corrected Tal array talArrayCorrection = TRUE","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTale","text":"approach first use HMMER find categorize regions input DNA sequence related coding sequence canonical TALE protein domains (N-Term, repeats, C-term). Hits (nearly [see minGapWidth parameter]) adjacent grouped \"taleArrays\" considered potential tal genes. talArrayCorrection parameter turned , longest predicted open reading frame (+extendedLength) talArray fed AnnoTALE detect TALE domains predicted translation product. Results hence similar obtained AnnoTALE, plus many additional informative output files tabular reports. talArrayCorrection turned , talearrays passed CorrectFrameshifts function attemps 'correct' potential frameshifts taleArray sequences. conveniently removes many artefactual indels bear mind may also erroneously 'correct' genuine frame shifts can highly relevant especially truncTALEs iTALES. resulting 'corrected' taleArray open reading frames passed AnnoTALE. Note occasionally, putative open reading frame encode canonical TALE protein (early frame shift, incomplete ORF, etc...), \"analyze\" module AnnoTALE outputs DNA parts protein parts /RVD sequence. detected reported tellTale log.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale2.html","id":null,"dir":"Reference","previous_headings":"","what":"This function name is deprecated and will ultimately be removed.\nIt corresponds to the tellTale which should be used instead. — tellTale2","title":"This function name is deprecated and will ultimately be removed.\nIt corresponds to the tellTale which should be used instead. — tellTale2","text":"function name deprecated ultimately removed. corresponds tellTale used instead.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTale2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function name is deprecated and will ultimately be removed.\nIt corresponds to the tellTale which should be used instead. — tellTale2","text":"","code":"tellTale2(   subjectFile,   outputDir = getwd(),   hmmFilesDir = system.file(\"extdata\", \"hmmProfile\", package = \"tantale\", mustWork = T),   TALE_NtermDNAHitMinScore = 300,   repeatDNAHitMinScore = 20,   TALE_CtermDNAHitMinScore = 200,   minDomainHitsPerSubjSeq = 4,   mergeHits = TRUE,   minGapWidth = 35,   appendExtremityCodes = TRUE,   rvdSep = \"-\",   hmmerpath = system.file(\"tools\", \"hmmer-3.3\", \"bin\", package = \"tantale\", mustWork = T),   extendedLength = 300,   talArrayCorrection = FALSE,   refForTalArrayCorrection = system.file(\"extdata\", \"decipher_ref_tales_aa.fa.gz\",     package = \"tantale\", mustWork = T),   frameShiftCorrection = -11,   ... )"},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTaleLegacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","text":"function maintained package temporarily used purpose curiosity. better using tellTale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTaleLegacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","text":"","code":"tellTaleLegacy(   subjectFile,   outputDir = getwd(),   hmmFilesDir = system.file(\"extdata\", \"hmmProfile\", package = \"tantale\", mustWork = T),   minRatioOfGapForColMasking = 0.8,   TALE_NtermDNAHitMinScore = 300,   repeatDNAHitMinScore = 20,   TALE_CtermDNAHitMinScore = 200,   minDomainHitsPerSubjSeq = 4,   mergeHits = TRUE,   repMsaMethod = \"decipher\",   minGapWidth = 35,   minDomainHitsPerArrayForAssembl = 5,   taleArrayStartAnchorCode = \"N-TERM\",   taleArrayEndAnchorCode = \"C-TERM\",   appendExtremityCodes = TRUE,   rvdSep = \" \",   hmmerpath = system.file(\"tools\", \"hmmer-3.3\", \"bin\", package = \"tantale\", mustWork = T) )"},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTaleLegacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","text":"subjectFile Fasta file DNA sequence(s) searched presence TALE coding sequences (CDS). outputDir Path output directory. specified, resluts written working folder. hmmFilesDir Specify path folder holding hmmfiles want use ones provided tantale. minRatioOfGapForColMasking Columns tale repeat CDS alignment contain gap fraction sequence higher value (betwen 0 1) masked alignment translating DNA sequences protein. TALE_NtermDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine repeatDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine TALE_CtermDNAHitMinScore Minimal nhmmer score cut_off value consider hit genuine minDomainHitsPerSubjSeq Minimum number nhmmer hits subject sequence reported TALE diagnostic regions. way simplify output little getting ride uninformative sequences mergeHits Perform overlapping hits merging per domain type. repMsaMethod Value character string either \"decipher\" \"hmmalign\". parameter defines method used compute tale repeat CDS multiple alignments prerequisite repeat CDS indel correction. hmmaling tends remove couple nucleotide extremities repeats match hmm profile. contrast, DECIPHER package function tends leave spurious sequences end repeat regions (notably last half repeat). cases, can bias subsequent tale analysis based DisTALE relies repeat sequences. minGapWidth Minimum gap base pairs two tale domain hits considered distinct. length gap value, domains considered \"contiguous\" grouped array. minDomainHitsPerArrayForAssembl DEPRECATED argument. Used speficy Minimum number repeat array seq RVD considered assembly. way get ride sequences short reasonably help assembly taleArrayStartAnchorCode scalar character vector symbolize TALE N-TERM CDS hit RVD sequence taleArrayEndAnchorCode scalar character vector symbolize TALE C-TERM CDS hit RVD sequence appendExtremityCodes Set FALSE want N- C-TREM anchor codes output sequences RVD rvdSep Symbol acting separator RVD sequences hmmerpath Specify path directory holding HMMER executable want use ones provided tantale.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTaleLegacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","text":"functions side effects (writing files, mostly).   However, everything ran smoothly, invisibly return path   directory output files written.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/tellTaleLegacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and report on the features of TALE protein domains potentially encoded\nin subject DNA sequences — tellTaleLegacy","text":"tellTaleLegacy, predecessor current tellTale function primarily written report 'corrected' TALE RVD sequences noisy DNA sequences (suboptimally polished genomes assembly, raw reads long read sequencing technologies [eg PacBio, ONT]) otherwise missed conventional tools (eg AnnoTALE). works far optimal 'corrected' repeat CDS currently tends remove 'unconventional' portions repeat CDS. may problematic downstream analysis DisTAL, especially 'aberrant' repeats. N- C-terminal domains CDS currently 'corrected'. work also subject DNA sequences high quality may 'correct' genuine frame shifts TALE repeat array CDS. output number files including tabular reports TALE arrays (ie full length partial tal gene CDS) identified coding sequences TALE domains, including repeat CDS.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/toListOfSplitedStr.html","id":null,"dir":"Reference","previous_headings":"","what":"Split strings of TALE sequences (`sep`-separated rvd or distal repeat IDs) — toListOfSplitedStr","title":"Split strings of TALE sequences (`sep`-separated rvd or distal repeat IDs) — toListOfSplitedStr","text":"Load content fasta file containing TALE sequences (either RVD Distal repeat code) return list vectors one composed individual elements sequence.","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/toListOfSplitedStr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split strings of TALE sequences (`sep`-separated rvd or distal repeat IDs) — toListOfSplitedStr","text":"","code":"toListOfSplitedStr(atomicStrings, sep = \"-\")"},{"path":"https://scunnac.github.io/tantale/dev/reference/toListOfSplitedStr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split strings of TALE sequences (`sep`-separated rvd or distal repeat IDs) — toListOfSplitedStr","text":"atomicStrings Either, path fasta file, AAStringSet \"BStringSet\" list. cases, element objects string tale sequence (`sep`-separated rvd distal repeat IDs) sep Separator elements sequence","code":""},{"path":"https://scunnac.github.io/tantale/dev/reference/toListOfSplitedStr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split strings of TALE sequences (`sep`-separated rvd or distal repeat IDs) — toListOfSplitedStr","text":"list named vectors representing 'splited' sequence.","code":""}]
